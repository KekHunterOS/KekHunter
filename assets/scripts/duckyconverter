#!/system/bin/sh

# This duckyscript converter script is originally written in bash by Andrej Budinčević <andrew@hotmail.rs>, big thanks to him for such a great script.
# Original repo: https://github.com/anbud/DroidDucky/blob/master/droidducky.sh
# For available keyboard layout, please refer to https://github.com/hak5darren/USB-Rubber-Ducky/tree/master/Encoder/resources
# And this is my edited script used to run by my own edited nethunter app.
# Usage: sh duckyscript -i [input file] -o [output file] -l [keyboard layout]"
# Available keyboard layout: [us|tr|sv|si|ru|pt|no|it|hr|gb|fr|fi|es|dk|de|ca|br|be|hu]

SCRIPT_PATH=$(readlink -f $0)
SOURCE_PATH=${SCRIPT_PATH%/*}

. ${SCRIPT_PATH%/*}/bootkali_env

##########################
#### Define Variables ####
##########################

## Validate busybox path.
if [ -z "$BUSYBOX" ]; then
    bklog "[-] No busybox_nh is installed or busybox_nh is not granted execute permission, if you did have it installed, please symlink it to /system/bin or /system/xbin and grant it the permission."
    exit 1
fi

## Check if hid binary existed.
HID_BIN=`which hid-keyboard | head -n1`
if [ -z "$HID_BIN" ]; then
    if [ -x $SOURCE_PATH/bin/hid-keyboard ]; then
        HID_BIN=$SOURCE_PATH/bin/hid-keyboard
    else
        echo "[-] There is no hid-keyboard executable existed, aborted..."
        exit 1
    fi
fi

## Define the available combination keys according to https://github.com/pelya/android-keyboard-gadget/blob/master/hid-gadget-test/jni/hid-gadget-test.c
## This will be used to check if user has input a combo key that is not included here.
COMBO_KEYS=(
left-ctrl
right-ctrl
ctrl
control
left-shift
right-shift
shift
left-alt
right-alt
alt
left-meta
right-meta
meta
gui
windows
1
2
3
4
5
6
7
8
9
0
return
enter
esc
escape
bckspc
backspace
tab
space
minus
dash
equals
equal
lbracket
rbracket
backslash
hash
number
semicolon
quote
backquote
tilde
comma
period
stop
slash
caps-lock
capslock
f1
f2
f3
f4
f5
f6
f7
f8
f9
f10
f11
f12
print
scroll-lock
scrolllock
pause
insert
home
pageup
pgup
del
delete
end
pagedown
pgdown
right
left
down
up
num-lock
numlock
kp-divide
kp-multiply
kp-minus
kp-plus
kp-enter
kp-return
kp-1
kp-2
kp-3
kp-4
kp-5
kp-6
kp-7
kp-8
kp-9
kp-0
kp-period
kp-stop
application
app
power
kp-equals
kp-equal
f13
f14
f15
f16
f17
f18
f19
f20
f21
f22
f23
f24
execute
help
menu
select
cancel
redo
undo
cut
copy
paste
find
mute
volume-up
volume-down
)

##########################
#### Define Functions ####
##########################

## Print the usage
function print_usage(){
    echo "[!] Usage: sh duckyscript -i [input file] -o [output file] -l [keyboard layout]"
    echo "[!]   e.g. sh duckyscript -i /sdcard/ducky.in -o /sdcard/ducky.out -l us"
    echo "[!] Available keyboard layout: [us|tr|sv|si|ru|pt|no|it|hr|gb|fr|fi|es|dk|de|ch|ca|br|be]"
}

## For converting the "STRING <your string>"
function write_kb_code(){
    local KBBYTE=$1
    echo "echo -ne \"$KBBYTE\" > /dev/hidg0" >> $OUTFILE
    echo "echo -ne \"\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\" > /dev/hidg0" >> $OUTFILE
}

## For converting the combo keys. i.e. "CTRL ALT DELETE"
function write_kb_code_bin(){
    echo "echo $@ | $HID_BIN /dev/hidg0 keyboard" >> $OUTFILE
}

function write_mouse_code(){
    echo "echo $@ | $HID_BIN /dev/hidg1 mouse" >> $OUTFILE
}

## Define the char hex code Corresponding to hid-keyboard-gadget.c
function define_default_keys_value(){
    MODIFIERKEY_CTRL='01'
    MODIFIERKEY_SHIFT='02'
    MODIFIERKEY_ALT='04'
    MODIFIERKEY_GUI='08'
    MODIFIERKEY_LEFT_CTRL='01'
    MODIFIERKEY_LEFT_SHIFT='02'
    MODIFIERKEY_LEFT_ALT='04'
    MODIFIERKEY_LEFT_GUI='08'
    MODIFIERKEY_RIGHT_CTRL='10'
    MODIFIERKEY_RIGHT_SHIFT='20'
    MODIFIERKEY_RIGHT_ALT='40'
    MODIFIERKEY_RIGHT_GUI='80'
    KEY_SPACE='2c'
    KEY_QUOTE='34'
    KEY_COMMA='36'
    KEY_MINUS='2d'
    KEY_PERIOD='37'
    KEY_SLASH='38'
    KEY_0='27'
    KEY_1='1e'
    KEY_2='1f'
    KEY_3='20'
    KEY_4='21'
    KEY_5='22'
    KEY_6='23'
    KEY_7='24'
    KEY_8='25'
    KEY_9='26'
    KEY_SEMICOLON='33'
    KEY_EQUAL='2e'
    KEY_EQUALS='2e'
    KEY_LEFT_BRACE='2f'
    KEY_BACKSLASH='31'
    KEY_RIGHT_BRACE='30'
    KEY_TILDE='35'
    KEY_A='04'
    KEY_B='05'
    KEY_C='06'
    KEY_D='07'
    KEY_E='08'
    KEY_F='09'
    KEY_G='0a'
    KEY_H='0b'
    KEY_I='0c'
    KEY_J='0d'
    KEY_K='0e'
    KEY_L='0f'
    KEY_M='10'
    KEY_N='11'
    KEY_O='12'
    KEY_P='13'
    KEY_Q='14'
    KEY_R='15'
    KEY_S='16'
    KEY_T='17'
    KEY_U='18'
    KEY_V='19'
    KEY_W='1a'
    KEY_X='1b'
    KEY_Y='1c'
    KEY_Z='1d'
}

## Define and map the set of default key bin variables after converting the ASCII variables
function define_default_keys_bin(){
    KEY_A_BIN=$(convert_ducky_bin "$(echo $ASCII_61 | cut -c15-16)")
    KEY_B_BIN=$(convert_ducky_bin "$(echo $ASCII_62 | cut -c15-16)")
    KEY_C_BIN=$(convert_ducky_bin "$(echo $ASCII_63 | cut -c15-16)")
    KEY_D_BIN=$(convert_ducky_bin "$(echo $ASCII_64 | cut -c15-16)")
    KEY_E_BIN=$(convert_ducky_bin "$(echo $ASCII_65 | cut -c15-16)")
    KEY_F_BIN=$(convert_ducky_bin "$(echo $ASCII_66 | cut -c15-16)")
    KEY_G_BIN=$(convert_ducky_bin "$(echo $ASCII_67 | cut -c15-16)")
    KEY_H_BIN=$(convert_ducky_bin "$(echo $ASCII_68 | cut -c15-16)")
    KEY_I_BIN=$(convert_ducky_bin "$(echo $ASCII_69 | cut -c15-16)")
    KEY_J_BIN=$(convert_ducky_bin "$(echo $ASCII_6A | cut -c15-16)")
    KEY_K_BIN=$(convert_ducky_bin "$(echo $ASCII_6B | cut -c15-16)")
    KEY_L_BIN=$(convert_ducky_bin "$(echo $ASCII_6C | cut -c15-16)")
    KEY_M_BIN=$(convert_ducky_bin "$(echo $ASCII_6D | cut -c15-16)")
    KEY_N_BIN=$(convert_ducky_bin "$(echo $ASCII_6E | cut -c15-16)")
    KEY_O_BIN=$(convert_ducky_bin "$(echo $ASCII_6F | cut -c15-16)")
    KEY_P_BIN=$(convert_ducky_bin "$(echo $ASCII_70 | cut -c15-16)")
    KEY_Q_BIN=$(convert_ducky_bin "$(echo $ASCII_71 | cut -c15-16)")
    KEY_R_BIN=$(convert_ducky_bin "$(echo $ASCII_72 | cut -c15-16)")
    KEY_S_BIN=$(convert_ducky_bin "$(echo $ASCII_73 | cut -c15-16)")
    KEY_T_BIN=$(convert_ducky_bin "$(echo $ASCII_74 | cut -c15-16)")
    KEY_U_BIN=$(convert_ducky_bin "$(echo $ASCII_75 | cut -c15-16)")
    KEY_V_BIN=$(convert_ducky_bin "$(echo $ASCII_76 | cut -c15-16)")
    KEY_W_BIN=$(convert_ducky_bin "$(echo $ASCII_77 | cut -c15-16)")
    KEY_X_BIN=$(convert_ducky_bin "$(echo $ASCII_78 | cut -c15-16)")
    KEY_Y_BIN=$(convert_ducky_bin "$(echo $ASCII_79 | cut -c15-16)")
    KEY_Z_BIN=$(convert_ducky_bin "$(echo $ASCII_7A | cut -c15-16)")
    KEY_0_BIN=$(convert_ducky_bin "$(echo $ASCII_30 | cut -c15-16)")
    KEY_1_BIN=$(convert_ducky_bin "$(echo $ASCII_31 | cut -c15-16)")
    KEY_2_BIN=$(convert_ducky_bin "$(echo $ASCII_32 | cut -c15-16)")
    KEY_3_BIN=$(convert_ducky_bin "$(echo $ASCII_33 | cut -c15-16)")
    KEY_4_BIN=$(convert_ducky_bin "$(echo $ASCII_34 | cut -c15-16)")
    KEY_5_BIN=$(convert_ducky_bin "$(echo $ASCII_35 | cut -c15-16)")
    KEY_6_BIN=$(convert_ducky_bin "$(echo $ASCII_36 | cut -c15-16)")
    KEY_7_BIN=$(convert_ducky_bin "$(echo $ASCII_37 | cut -c15-16)")
    KEY_8_BIN=$(convert_ducky_bin "$(echo $ASCII_38 | cut -c15-16)")
    KEY_9_BIN=$(convert_ducky_bin "$(echo $ASCII_39 | cut -c15-16)")
    KEY_TILDE_BIN=$(convert_ducky_bin "$(echo $ASCII_60 | cut -c15-16)")
    KEY_MINUS_BIN=$(convert_ducky_bin "$(echo $ASCII_2D | cut -c15-16)")
    KEY_EQUAL_BIN=$(convert_ducky_bin "$(echo $ASCII_3D | cut -c15-16)")
    KEY_RIGHT_BRACE_BIN=$(convert_ducky_bin "$(echo $ASCII_5D | cut -c15-16)")
    KEY_LEFT_BRACE_BIN=$(convert_ducky_bin "$(echo $ASCII_5B | cut -c15-16)")
    KEY_SEMICOLON_BIN=$(convert_ducky_bin "$(echo $ASCII_3B | cut -c15-16)")
    KEY_QUOTE_BIN=$(convert_ducky_bin "$(echo $ASCII_27 | cut -c15-16)")
    KEY_BACKSLASH_BIN=$(convert_ducky_bin "$(echo $ASCII_5C | cut -c15-16)")
    KEY_COMMA_BIN=$(convert_ducky_bin "$(echo $ASCII_2C | cut -c15-16)")
    KEY_PERIOD_BIN=$(convert_ducky_bin "$(echo $ASCII_2E | cut -c15-16)")
    KEY_SLASH_BIN=$(convert_ducky_bin "$(echo $ASCII_2F | cut -c15-16)")
}

## Extract the key value from ASCII variables and map to KEY_XXXX_BIN variables
function convert_ducky_bin(){
    case $1 in
        '04') echo "a";;
        '05') echo "b";;
        '06') echo "c";;
        '07') echo "d";;
        '08') echo "e";;
        '09') echo "f";;
        '0a') echo "g";;
        '0b') echo "h";;
        '0c') echo "i";;
        '0d') echo "j";;
        '0e') echo "k";;
        '0f') echo "l";;
        '10') echo "m";;
        '11') echo "n";;
        '12') echo "o";;
        '13') echo "p";;
        '14') echo "q";;
        '15') echo "r";;
        '16') echo "s";;
        '17') echo "t";;
        '18') echo "u";;
        '19') echo "v";;
        '1a') echo "w";;
        '1b') echo "x";;
        '1c') echo "y";;
        '1d') echo "z";;
        '27') echo "0";;
        '1e') echo "1";;
        '1f') echo "2";;
        '20') echo "3";;
        '21') echo "4";;
        '22') echo "5";;
        '23') echo "6";;
        '24') echo "7";;
        '25') echo "8";;
        '26') echo "9";;
        '35') echo "tilde";;
        '2d') echo "minus";;
        '2e') echo "equal";;
        '2f') echo "lbracket";;
        '30') echo "rbracket";;
        '31') echo "backslash";;
        '33') echo "semicolon";;
        '34') echo "quote";;
        '36') echo "comma";;
        '37') echo "period";;
        '38') echo "slash";;
    esac
}

## This is to construct the complete hex string passed to /dev/hidg0
function construct_kbbyte(){
    local KVAL
    local KMOD
    if [ $# -eq 1 ]; then
        KVAL=$1
        KMOD='00'
    elif [ $# -eq 2 ]; then
        KVAL=$1
        KMOD=$2
    else
        echo "[-] construct_kbbyte() function accepts only two args."
        exit 1
    fi
    echo "\\\\\\\\x$KMOD\\\\\\\\x00\\\\\\\\x00\\\\\\\\x$KVAL\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00"
}

## Map the actual KEY combination to ASCII/ISO_8859_1/ISO_8859_5 variables according to the layout you select.
function convert_kb_layout() {
    case $KB_LAYOUT in
        us)
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_21=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_22=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_SHIFT)
            ASCII_23=$(construct_kbbyte $KEY_3 $MODIFIERKEY_SHIFT)
            ASCII_24=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ASCII_25=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_26=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_27=$(construct_kbbyte $KEY_QUOTE)
            ASCII_28=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_29=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ASCII_2A=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_2B=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_SHIFT)
            ASCII_2C=$(construct_kbbyte $KEY_COMMA)
            ASCII_2D=$(construct_kbbyte $KEY_MINUS)
            ASCII_2E=$(construct_kbbyte $KEY_PERIOD)
            ASCII_2F=$(construct_kbbyte $KEY_SLASH)
            ASCII_30=$(construct_kbbyte $KEY_0)
            ASCII_31=$(construct_kbbyte $KEY_1)
            ASCII_32=$(construct_kbbyte $KEY_2)
            ASCII_33=$(construct_kbbyte $KEY_3)
            ASCII_34=$(construct_kbbyte $KEY_4)
            ASCII_35=$(construct_kbbyte $KEY_5)
            ASCII_36=$(construct_kbbyte $KEY_6)
            ASCII_37=$(construct_kbbyte $KEY_7)
            ASCII_38=$(construct_kbbyte $KEY_8)
            ASCII_39=$(construct_kbbyte $KEY_9)
            ASCII_3A=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_SHIFT)
            ASCII_3B=$(construct_kbbyte $KEY_SEMICOLON)
            ASCII_3C=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ASCII_3D=$(construct_kbbyte $KEY_EQUAL)
            ASCII_3E=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ASCII_3F=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_41=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            ASCII_5B=$(construct_kbbyte $KEY_LEFT_BRACE)
            ASCII_5C=$(construct_kbbyte $KEY_BACKSLASH)
            ASCII_5D=$(construct_kbbyte $KEY_RIGHT_BRACE)
            ASCII_5E=$(construct_kbbyte $KEY_6 $MODIFIERKEY_SHIFT)
            ASCII_5F=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ASCII_60=$(construct_kbbyte $KEY_TILDE)
            ASCII_61=$(construct_kbbyte $KEY_A)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_63=$(construct_kbbyte $KEY_C)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_69=$(construct_kbbyte $KEY_I)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ASCII_6D=$(construct_kbbyte $KEY_M)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_71=$(construct_kbbyte $KEY_Q)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_73=$(construct_kbbyte $KEY_S)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_77=$(construct_kbbyte $KEY_W)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_79=$(construct_kbbyte $KEY_Y)
            ASCII_7A=$(construct_kbbyte $KEY_Z)
            ASCII_7B=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_7C=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_SHIFT)
            ASCII_7D=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_7E=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_SHIFT)
            ;;
        tr)
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_21=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_22=$(construct_kbbyte $KEY_TILDE)
            ASCII_23=$(construct_kbbyte $KEY_3 $MODIFIERKEY_RIGHT_ALT)
            ASCII_24=$(construct_kbbyte $KEY_4 $MODIFIERKEY_RIGHT_ALT)
            ASCII_25=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_26=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_27=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_28=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_29=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_2A=$(construct_kbbyte $KEY_MINUS)
            ASCII_2B=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ASCII_2C=$(construct_kbbyte $KEY_BACKSLASH)
            ASCII_2D=$(construct_kbbyte $KEY_EQUAL)
            ASCII_2E=$(construct_kbbyte $KEY_SLASH)
            ASCII_2F=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_30=$(construct_kbbyte $KEY_0)
            ASCII_31=$(construct_kbbyte $KEY_1)
            ASCII_32=$(construct_kbbyte $KEY_2)
            ASCII_33=$(construct_kbbyte $KEY_3)
            ASCII_34=$(construct_kbbyte $KEY_4)
            ASCII_35=$(construct_kbbyte $KEY_5)
            ASCII_36=$(construct_kbbyte $KEY_6)
            ASCII_37=$(construct_kbbyte $KEY_7)
            ASCII_38=$(construct_kbbyte $KEY_8)
            ASCII_39=$(construct_kbbyte $KEY_9)
            ASCII_3A=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ASCII_3B=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_SHIFT)
            ASCII_3C=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ASCII_3D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ASCII_3E=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ASCII_3F=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_Q $MODIFIERKEY_RIGHT_ALT)
            ASCII_41=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            ASCII_5B=$(construct_kbbyte $KEY_8 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5C=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_RIGHT_ALT)
            ASCII_5D=$(construct_kbbyte $KEY_9 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5E=$(construct_kbbyte $KEY_3 $MODIFIERKEY_SHIFT)
            ASCII_5F=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_SHIFT)
            ASCII_60=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_RIGHT_ALT)
            ASCII_61=$(construct_kbbyte $KEY_A)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_63=$(construct_kbbyte $KEY_C)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_69=$(construct_kbbyte $KEY_QUOTE)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ASCII_6D=$(construct_kbbyte $KEY_M)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_71=$(construct_kbbyte $KEY_Q)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_73=$(construct_kbbyte $KEY_S)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_77=$(construct_kbbyte $KEY_W)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_79=$(construct_kbbyte $KEY_Y)
            ASCII_7A=$(construct_kbbyte $KEY_Z)
            ASCII_7B=$(construct_kbbyte $KEY_7 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7C=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_SHIFT)
            ASCII_7D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7E=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_RIGHT_ALT)
            ;;
        sv)
            KEY_NON_US_100='64'
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_21=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_22=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_23=$(construct_kbbyte $KEY_3 $MODIFIERKEY_SHIFT)
            ASCII_24=$(construct_kbbyte $KEY_4 $MODIFIERKEY_RIGHT_ALT)
            ASCII_25=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_26=$(construct_kbbyte $KEY_6 $MODIFIERKEY_SHIFT)
            ASCII_27=$(construct_kbbyte $KEY_BACKSLASH)
            ASCII_28=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_29=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_2A=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_SHIFT)
            ASCII_2B=$(construct_kbbyte $KEY_MINUS)
            ASCII_2C=$(construct_kbbyte $KEY_COMMA)
            ASCII_2D=$(construct_kbbyte $KEY_SLASH)
            ASCII_2E=$(construct_kbbyte $KEY_PERIOD)
            ASCII_2F=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_30=$(construct_kbbyte $KEY_0)
            ASCII_31=$(construct_kbbyte $KEY_1)
            ASCII_32=$(construct_kbbyte $KEY_2)
            ASCII_33=$(construct_kbbyte $KEY_3)
            ASCII_34=$(construct_kbbyte $KEY_4)
            ASCII_35=$(construct_kbbyte $KEY_5)
            ASCII_36=$(construct_kbbyte $KEY_6)
            ASCII_37=$(construct_kbbyte $KEY_7)
            ASCII_38=$(construct_kbbyte $KEY_8)
            ASCII_39=$(construct_kbbyte $KEY_9)
            ASCII_3A=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ASCII_3B=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ASCII_3C=$(construct_kbbyte $KEY_NON_US_100)
            ASCII_3D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ASCII_3E=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_SHIFT)
            ASCII_3F=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_2 $MODIFIERKEY_RIGHT_ALT)
            ASCII_41=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            ASCII_5B=$(construct_kbbyte $KEY_8 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5C=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_RIGHT_ALT)
            ASCII_5D=$(construct_kbbyte $KEY_9 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5E=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_5F=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ASCII_60=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_SHIFT)
            ASCII_61=$(construct_kbbyte $KEY_A)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_63=$(construct_kbbyte $KEY_C)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_69=$(construct_kbbyte $KEY_I)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ASCII_6D=$(construct_kbbyte $KEY_M)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_71=$(construct_kbbyte $KEY_Q)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_73=$(construct_kbbyte $KEY_S)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_77=$(construct_kbbyte $KEY_W)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_79=$(construct_kbbyte $KEY_Y)
            ASCII_7A=$(construct_kbbyte $KEY_Z)
            ASCII_7B=$(construct_kbbyte $KEY_7 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7C=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7F=$(construct_kbbyte $KEY_BACKSPACE)
            ISO_8859_1_A3=$(construct_kbbyte $KEY_3 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_A4=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ISO_8859_1_A7=$(construct_kbbyte $KEY_TILDE)
            ISO_8859_1_AB=$(construct_kbbyte $KEY_4)
            ISO_8859_1_B5=$(construct_kbbyte $KEY_M $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_BD=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_SHIFT)
            ISO_8859_1_C4=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_SHIFT)
            ISO_8859_1_C5=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_SHIFT)
            ISO_8859_1_D6=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_SHIFT)
            ISO_8859_1_DF=$(construct_kbbyte $KEY_S $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_E4=$(construct_kbbyte $KEY_QUOTE)
            ISO_8859_1_E5=$(construct_kbbyte $KEY_LEFT_BRACE)
            ISO_8859_1_F0=$(construct_kbbyte $KEY_D $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_F6=$(construct_kbbyte $KEY_SEMICOLON)
            ISO_8859_1_FE=$(construct_kbbyte $KEY_T $MODIFIERKEY_RIGHT_ALT)
            UNICODE_20AC=$(construct_kbbyte $KEY_E $MODIFIERKEY_RIGHT_ALT)
            ;;
        si)
            KEY_NON_US_100='64'
            ## Nonbreakng Space
            ## a b c č d e f g h i j k l m n o p r s š t u v z ž x y q w ć đ
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_61=$(construct_kbbyte $KEY_A)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_63=$(construct_kbbyte $KEY_C)
            UNICODE_10D=$(construct_kbbyte $KEY_SEMICOLON)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_69=$(construct_kbbyte $KEY_I)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ASCII_6D=$(construct_kbbyte $KEY_M)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_73=$(construct_kbbyte $KEY_S)
            UNICODE_161=$(construct_kbbyte $KEY_LEFT_BRACE)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_7A=$(construct_kbbyte $KEY_Y)
            UNICODE_17E=$(construct_kbbyte $KEY_BACKSLASH)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_79=$(construct_kbbyte $KEY_Z)
            ASCII_71=$(construct_kbbyte $KEY_Q)
            ASCII_77=$(construct_kbbyte $KEY_W)
            UNICODE_107=$(construct_kbbyte $KEY_QUOTE)
            UNICODE_111=$(construct_kbbyte $KEY_RIGHT_BRACE)
            ## A B C Č D E F G H I J K L M N O P R S Š T U V Z Ž X Y Q W Ć Đ
            ASCII_41=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            UNICODE_10C=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            UNICODE_160=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            UNICODE_17D=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            UNICODE_106=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_SHIFT)
            UNICODE_110=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_SHIFT)
            ## Symbols // ! " # $ % & / ( ) = ? * < >  , ; . : - _ [ ] ~ ` \ | € ÷ × ł Ł ß ¤ { } § @
            ASCII_21=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_22=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_23=$(construct_kbbyte $KEY_3 $MODIFIERKEY_SHIFT)
            ASCII_24=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ASCII_25=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_26=$(construct_kbbyte $KEY_6 $MODIFIERKEY_SHIFT)
            ASCII_2F=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_28=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_29=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_3D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ASCII_3F=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ASCII_2A=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_SHIFT)
            ASCII_27=$(construct_kbbyte $KEY_MINUS)
            ASCII_2B=$(construct_kbbyte $KEY_EQUAL)
            ASCII_7E=$(construct_kbbyte $KEY_1 $MODIFIERKEY_RIGHT_ALT)
            ASCII_60=$(construct_kbbyte $KEY_7 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5C=$(construct_kbbyte $KEY_Q $MODIFIERKEY_RIGHT_ALT)
            ASCII_7C=$(construct_kbbyte $KEY_W $MODIFIERKEY_RIGHT_ALT)
            UNICODE_20AC=$(construct_kbbyte $KEY_E $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_F7=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_D7=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_RIGHT_ALT)
            ASCII_5B=$(construct_kbbyte $KEY_F $MODIFIERKEY_RIGHT_ALT)
            ASCII_5D=$(construct_kbbyte $KEY_G $MODIFIERKEY_RIGHT_ALT)
            UNICODE_142=$(construct_kbbyte $KEY_K $MODIFIERKEY_RIGHT_ALT)
            UNICODE_141=$(construct_kbbyte $KEY_L $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_DF=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_A4=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_RIGHT_ALT)
            ASCII_3C=$(construct_kbbyte $KEY_NON_US_100)
            ASCII_3E=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_V $MODIFIERKEY_RIGHT_ALT)
            ASCII_7B=$(construct_kbbyte $KEY_B $MODIFIERKEY_RIGHT_ALT)
            ASCII_7D=$(construct_kbbyte $KEY_N $MODIFIERKEY_RIGHT_ALT)
            ASCII_2E=$(construct_kbbyte $KEY_PERIOD)
            ASCII_2D=$(construct_kbbyte $KEY_SLASH)
            ASCII_3A=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ASCII_5F=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ASCII_2C=$(construct_kbbyte $KEY_COMMA)
            ASCII_3B=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ISO_8859_1_A7=$(construct_kbbyte $KEY_M $MODIFIERKEY_RIGHT_ALT)
            ## Not needed chars // input: ¸ ¨ ˇ ^ ˘ ° ˛ ˙ ´ ˝ ¨ ¸ output: ¸¨ˇ^˘°˛˙´˝¨¸ (notice no space!)
            ISO_8859_1_B8=$(construct_kbbyte $KEY_TILDE)
            ISO_8859_1_A8=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_SHIFT)
            UNICODE_2C7=$(construct_kbbyte $KEY_2 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5E=$(construct_kbbyte $KEY_3 $MODIFIERKEY_RIGHT_ALT)
            UNICODE_2D8=$(construct_kbbyte $KEY_4 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_B0=$(construct_kbbyte $KEY_5 $MODIFIERKEY_RIGHT_ALT)
            UNICODE_2DB=$(construct_kbbyte $KEY_6 $MODIFIERKEY_RIGHT_ALT)
            UNICODE_2D9=$(construct_kbbyte $KEY_8 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_B4=$(construct_kbbyte $KEY_9 $MODIFIERKEY_RIGHT_ALT)
            UNICODE_2DD=$(construct_kbbyte $KEY_0 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_A8=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_B8=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_RIGHT_ALT)
            ## Numbers: 0 1 2 3 4 5 6 7 8 9
            ASCII_30=$(construct_kbbyte $KEY_0)
            ASCII_31=$(construct_kbbyte $KEY_1)
            ASCII_32=$(construct_kbbyte $KEY_2)
            ASCII_33=$(construct_kbbyte $KEY_3)
            ASCII_34=$(construct_kbbyte $KEY_4)
            ASCII_35=$(construct_kbbyte $KEY_5)
            ASCII_36=$(construct_kbbyte $KEY_6)
            ASCII_37=$(construct_kbbyte $KEY_7)
            ASCII_38=$(construct_kbbyte $KEY_8)
            ASCII_39=$(construct_kbbyte $KEY_9)
            ;;
        ru)
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ##numbers
            ##ё1234567890-ъ
            ##Ё!“£$%«»*()_Ъ
            ISO_8859_5_F1=$(construct_kbbyte $KEY_TILDE)
            ISO_8859_5_A1=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_SHIFT)
            ISO_8859_5_31=$(construct_kbbyte $KEY_1)
            ISO_8859_5_21=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ISO_8859_5_32=$(construct_kbbyte $KEY_2)
            ISO_8859_5_22=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ISO_8859_5_33=$(construct_kbbyte $KEY_3)
            ISO_8859_5_23=$(construct_kbbyte $KEY_3 $MODIFIERKEY_SHIFT)
            ISO_8859_5_34=$(construct_kbbyte $KEY_4)
            ISO_8859_5_24=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ISO_8859_5_35=$(construct_kbbyte $KEY_5)
            ISO_8859_5_25=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ISO_8859_5_36=$(construct_kbbyte $KEY_6)
            ISO_8859_5_26=$(construct_kbbyte $KEY_6 $MODIFIERKEY_SHIFT)
            ISO_8859_5_37=$(construct_kbbyte $KEY_7)
            ISO_8859_5_27=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ISO_8859_5_38=$(construct_kbbyte $KEY_8)
            ISO_8859_5_2A=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ISO_8859_5_39=$(construct_kbbyte $KEY_9)
            ISO_8859_5_28=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ISO_8859_5_30=$(construct_kbbyte $KEY_0)
            ISO_8859_5_29=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ISO_8859_5_2D=$(construct_kbbyte $KEY_MINUS)
            ISO_8859_5_5F=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ISO_8859_5_CA=$(construct_kbbyte $KEY_EQUALS)
            ISO_8859_5_EA=$(construct_kbbyte $KEY_EQUALS $MODIFIERKEY_SHIFT)
            ##letters - 1st row
            ##ЯШЕРТЫУИОПЮЩ
            ##яшертыуиопющ
            ISO_8859_5_CF=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ISO_8859_5_EF=$(construct_kbbyte $KEY_Q)
            ISO_8859_5_C8=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            ISO_8859_5_E8=$(construct_kbbyte $KEY_W)
            ISO_8859_5_B5=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ISO_8859_5_D5=$(construct_kbbyte $KEY_E)
            ISO_8859_5_C0=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ISO_8859_5_E0=$(construct_kbbyte $KEY_R)
            ISO_8859_5_C2=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ISO_8859_5_E2=$(construct_kbbyte $KEY_T)
            ISO_8859_5_CB=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ISO_8859_5_EB=$(construct_kbbyte $KEY_Y)
            ISO_8859_5_C3=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ISO_8859_5_E3=$(construct_kbbyte $KEY_U)
            ISO_8859_5_B8=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ISO_8859_5_D8=$(construct_kbbyte $KEY_I)
            ISO_8859_5_BE=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ISO_8859_5_DE=$(construct_kbbyte $KEY_O)
            ISO_8859_5_BF=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ISO_8859_5_DF=$(construct_kbbyte $KEY_P)
            ISO_8859_5_CE=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_SHIFT)
            ISO_8859_5_EE=$(construct_kbbyte $KEY_LEFT_BRACE)
            ISO_8859_5_C9=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_SHIFT)
            ISO_8859_5_E9=$(construct_kbbyte $KEY_RIGHT_BRACE)
            ##2nd row
            ##АСДФГЧЙКЛЬЖ~
            ##асдфгчйкльж№
            ISO_8859_5_B0=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ISO_8859_5_D0=$(construct_kbbyte $KEY_A)
            ISO_8859_5_C1=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            ISO_8859_5_E1=$(construct_kbbyte $KEY_S)
            ISO_8859_5_B4=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ISO_8859_5_D4=$(construct_kbbyte $KEY_D)
            ISO_8859_5_C0=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ISO_8859_5_D0=$(construct_kbbyte $KEY_F)
            ISO_8859_5_B3=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ISO_8859_5_D3=$(construct_kbbyte $KEY_G)
            ISO_8859_5_C3=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ISO_8859_5_E3=$(construct_kbbyte $KEY_H)
            ISO_8859_5_B9=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ISO_8859_5_D9=$(construct_kbbyte $KEY_J)
            ISO_8859_5_BA=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ISO_8859_5_DA=$(construct_kbbyte $KEY_K)
            ISO_8859_5_BB=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ISO_8859_5_DB=$(construct_kbbyte $KEY_L)
            ISO_8859_5_CC=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_SHIFT)
            ISO_8859_5_EC=$(construct_kbbyte $KEY_SEMICOLON)
            ISO_8859_5_B6=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_SHIFT)
            ISO_8859_5_D6=$(construct_kbbyte $KEY_QUOTE)
            ISO_8859_5_F0=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_SHIFT)
            ISO_8859_5_7E=$(construct_kbbyte $KEY_BACKSLASH)
            ##3rd row
            ##ЗХЦВБНМ;:?
            ##зхцвбнм,./
            ISO_8859_5_B7=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            ISO_8859_5_D7=$(construct_kbbyte $KEY_Z)
            ISO_8859_5_C5=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ISO_8859_5_E5=$(construct_kbbyte $KEY_X)
            ISO_8859_5_C6=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            ISO_8859_5_E6=$(construct_kbbyte $KEY_C)
            ISO_8859_5_B2=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ISO_8859_5_D2=$(construct_kbbyte $KEY_V)
            ISO_8859_5_B1=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ISO_8859_5_D1=$(construct_kbbyte $KEY_B)
            ISO_8859_5_BD=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ISO_8859_5_DD=$(construct_kbbyte $KEY_N)
            ISO_8859_5_BC=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ISO_8859_5_DC=$(construct_kbbyte $KEY_M)
            ISO_8859_5_2C=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ISO_8859_5_3B=$(construct_kbbyte $KEY_COMMA)
            ISO_8859_5_2E=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ISO_8859_5_3A=$(construct_kbbyte $KEY_PERIOD)
            ISO_8859_5_2F=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ISO_8859_5_3F=$(construct_kbbyte $KEY_SLASH)
            ;;
        pt)
            KEY_NON_US_NUM='32'
            KEY_NON_US_100='64'
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_21=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_31=$(construct_kbbyte $KEY_1)
            ASCII_22=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_32=$(construct_kbbyte $KEY_2)
            ASCII_23=$(construct_kbbyte $KEY_3 $MODIFIERKEY_SHIFT)
            ASCII_33=$(construct_kbbyte $KEY_3)
            ASCII_24=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ASCII_34=$(construct_kbbyte $KEY_4)
            ASCII_25=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_35=$(construct_kbbyte $KEY_5)
            ASCII_26=$(construct_kbbyte $KEY_6 $MODIFIERKEY_SHIFT)
            ASCII_36=$(construct_kbbyte $KEY_6)
            ASCII_2F=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_37=$(construct_kbbyte $KEY_7)
            ASCII_28=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_38=$(construct_kbbyte $KEY_8)
            ASCII_29=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_39=$(construct_kbbyte $KEY_9)
            ASCII_3D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ASCII_30=$(construct_kbbyte $KEY_0)
            ASCII_3F=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ASCII_27=$(construct_kbbyte $KEY_MINUS)
            ASCII_2A=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_2B=$(construct_kbbyte $KEY_LEFT_BRACE)
            ASCII_2C=$(construct_kbbyte $KEY_COMMA)
            ASCII_3B=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ASCII_2D=$(construct_kbbyte $KEY_SLASH)
            ASCII_5F=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ASCII_2E=$(construct_kbbyte $KEY_PERIOD)
            ASCII_3A=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ASCII_3C=$(construct_kbbyte $KEY_NON_US_100)
            ASCII_3E=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_2 $MODIFIERKEY_RIGHT_ALT)
            ASCII_41=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            ASCII_5B=$(construct_kbbyte $KEY_8 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5D=$(construct_kbbyte $KEY_9 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5E=$(construct_kbbyte $KEY_NON_US_NUM $MODIFIERKEY_SHIFT)
            ASCII_7E=$(construct_kbbyte $KEY_NON_US_NUM)
            ASCII_60=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_61=$(construct_kbbyte $KEY_A)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_63=$(construct_kbbyte $KEY_C)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_69=$(construct_kbbyte $KEY_I)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ASCII_6D=$(construct_kbbyte $KEY_M)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_71=$(construct_kbbyte $KEY_Q)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_73=$(construct_kbbyte $KEY_S)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_77=$(construct_kbbyte $KEY_W)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_79=$(construct_kbbyte $KEY_Y)
            ASCII_7A=$(construct_kbbyte $KEY_Z)
            ASCII_7B=$(construct_kbbyte $KEY_7 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7C=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_SHIFT)
            ASCII_5C=$(construct_kbbyte $KEY_TILDE)
            ASCII_7F=$(construct_kbbyte $KEY_BACKSPACE)
            ISO_8859_1_E7=$(construct_kbbyte $KEY_SEMICOLON)
            ISO_8859_1_C7=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_SHIFT)
            ISO_8859_1_BA=$(construct_kbbyte $KEY_QUOTE)
            ISO_8859_1_AA=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_SHIFT)
            ISO_8859_1_A7=$(construct_kbbyte $KEY_4 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_A3=$(construct_kbbyte $KEY_3 $MODIFIERKEY_RIGHT_ALT)
            UNICODE_20AC=$(construct_kbbyte $KEY_E $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_AB=$(construct_kbbyte $KEY_EQUAL)
            ISO_8859_1_BB=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_SHIFT)
            ;;
        no)
            KEY_NON_US_100='64'
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_21=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_22=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_23=$(construct_kbbyte $KEY_3 $MODIFIERKEY_SHIFT)
            ASCII_24=$(construct_kbbyte $KEY_4 $MODIFIERKEY_RIGHT_ALT)
            ASCII_25=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_26=$(construct_kbbyte $KEY_6 $MODIFIERKEY_SHIFT)
            ASCII_27=$(construct_kbbyte $KEY_BACKSLASH)
            ASCII_28=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_29=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_2A=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_SHIFT)
            ASCII_2B=$(construct_kbbyte $KEY_MINUS)
            ASCII_2C=$(construct_kbbyte $KEY_COMMA)
            ASCII_2D=$(construct_kbbyte $KEY_SLASH)
            ASCII_2E=$(construct_kbbyte $KEY_PERIOD)
            ASCII_2F=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_30=$(construct_kbbyte $KEY_0)
            ASCII_31=$(construct_kbbyte $KEY_1)
            ASCII_32=$(construct_kbbyte $KEY_2)
            ASCII_33=$(construct_kbbyte $KEY_3)
            ASCII_34=$(construct_kbbyte $KEY_4)
            ASCII_35=$(construct_kbbyte $KEY_5)
            ASCII_36=$(construct_kbbyte $KEY_6)
            ASCII_37=$(construct_kbbyte $KEY_7)
            ASCII_38=$(construct_kbbyte $KEY_8)
            ASCII_39=$(construct_kbbyte $KEY_9)
            ASCII_3A=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ASCII_3B=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ASCII_3C=$(construct_kbbyte $KEY_NON_US_100)
            ASCII_3D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ASCII_3E=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_SHIFT)
            ASCII_3F=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_2 $MODIFIERKEY_RIGHT_ALT)
            ASCII_41=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            ASCII_5B=$(construct_kbbyte $KEY_8 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5C=$(construct_kbbyte $KEY_EQUAL)
            ASCII_5D=$(construct_kbbyte $KEY_9 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5E=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_5F=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ASCII_60=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_SHIFT)
            ASCII_61=$(construct_kbbyte $KEY_A)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_63=$(construct_kbbyte $KEY_C)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_69=$(construct_kbbyte $KEY_I)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ASCII_6D=$(construct_kbbyte $KEY_M)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_71=$(construct_kbbyte $KEY_Q)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_73=$(construct_kbbyte $KEY_S)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_77=$(construct_kbbyte $KEY_W)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_79=$(construct_kbbyte $KEY_Y)
            ASCII_7A=$(construct_kbbyte $KEY_Z)
            ASCII_7B=$(construct_kbbyte $KEY_7 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7C=$(construct_kbbyte $KEY_TILDE)
            ASCII_7D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7E=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_RIGHT_ALT)
            ASCII_7F=$(construct_kbbyte $KEY_BACKSPACE)
            ISO_8859_1_A0=$(construct_kbbyte $KEY_SPACE)
            ISO_8859_1_A3=$(construct_kbbyte $KEY_3 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_A4=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ISO_8859_1_A7=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_SHIFT)
            ISO_8859_1_AB=$(construct_kbbyte $KEY_4)
            ISO_8859_1_B5=$(construct_kbbyte $KEY_M $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_BD=$(construct_kbbyte $KEY_TILDE)
            ISO_8859_1_C5=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_SHIFT)
            ISO_8859_1_C6=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_SHIFT)
            ISO_8859_1_D8=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_SHIFT)
            ISO_8859_1_DF=$(construct_kbbyte $KEY_S $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_E5=$(construct_kbbyte $KEY_LEFT_BRACE)
            ISO_8859_1_E6=$(construct_kbbyte $KEY_QUOTE)
            ISO_8859_1_F0=$(construct_kbbyte $KEY_D $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_F8=$(construct_kbbyte $KEY_SEMICOLON)
            ISO_8859_1_FE=$(construct_kbbyte $KEY_T $MODIFIERKEY_RIGHT_ALT)
            UNICODE_20AC=$(construct_kbbyte $KEY_E $MODIFIERKEY_RIGHT_ALT)
            ;;
        it)
            KEY_NON_US_100='64'
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_21=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_22=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_23=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_RIGHT_ALT)
            ASCII_24=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ASCII_25=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_26=$(construct_kbbyte $KEY_6 $MODIFIERKEY_SHIFT)
            ASCII_27=$(construct_kbbyte $KEY_MINUS)
            ASCII_28=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_29=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_2A=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_2B=$(construct_kbbyte $KEY_RIGHT_BRACE)
            ASCII_2C=$(construct_kbbyte $KEY_COMMA)
            ASCII_2D=$(construct_kbbyte $KEY_SLASH)
            ASCII_2E=$(construct_kbbyte $KEY_PERIOD)
            ASCII_2F=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_30=$(construct_kbbyte $KEY_0)
            ASCII_31=$(construct_kbbyte $KEY_1)
            ASCII_32=$(construct_kbbyte $KEY_2)
            ASCII_33=$(construct_kbbyte $KEY_3)
            ASCII_34=$(construct_kbbyte $KEY_4)
            ASCII_35=$(construct_kbbyte $KEY_5)
            ASCII_36=$(construct_kbbyte $KEY_6)
            ASCII_37=$(construct_kbbyte $KEY_7)
            ASCII_38=$(construct_kbbyte $KEY_8)
            ASCII_39=$(construct_kbbyte $KEY_9)
            ASCII_3A=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ASCII_3B=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ASCII_3C=$(construct_kbbyte $KEY_NON_US_100)
            ASCII_3D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ASCII_3E=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_SHIFT)
            ASCII_3F=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_RIGHT_ALT)
            ASCII_41=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            ASCII_5B=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_RIGHT_ALT)
            ASCII_5C=$(construct_kbbyte $KEY_TILDE)
            ASCII_5D=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_RIGHT_ALT)
            ASCII_5E=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_SHIFT)
            ASCII_5F=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ASCII_61=$(construct_kbbyte $KEY_A)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_63=$(construct_kbbyte $KEY_C)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_69=$(construct_kbbyte $KEY_I)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ASCII_6D=$(construct_kbbyte $KEY_M)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_71=$(construct_kbbyte $KEY_Q)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_73=$(construct_kbbyte $KEY_S)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_77=$(construct_kbbyte $KEY_W)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_79=$(construct_kbbyte $KEY_Y)
            ASCII_7A=$(construct_kbbyte $KEY_Z)
            ASCII_7B=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_RIGHT_ALT $MODIFIERKEY_SHIFT)
            ASCII_7C=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_SHIFT)
            ASCII_7D=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_RIGHT_ALT $MODIFIERKEY_SHIFT)
            ISO_8859_1_E0=$(construct_kbbyte $KEY_QUOTE)
            ISO_8859_1_E8=$(construct_kbbyte $KEY_LEFT_BRACE)
            ISO_8859_1_E9=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_SHIFT)
            ISO_8859_1_EC=$(construct_kbbyte $KEY_EQUAL)
            ISO_8859_1_F2=$(construct_kbbyte $KEY_SEMICOLON)
            ISO_8859_1_F9=$(construct_kbbyte $KEY_BACKSLASH)
            ;;
        hr)
            KEY_NON_US_100='64'
            ## a b c č d e f g h i j k l m n o p r s š t u v z ž x y q w ć đ
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_61=$(construct_kbbyte $KEY_A)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_63=$(construct_kbbyte $KEY_C)
            UNICODE_10D=$(construct_kbbyte $KEY_SEMICOLON)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_69=$(construct_kbbyte $KEY_I)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ASCII_6D=$(construct_kbbyte $KEY_M)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_73=$(construct_kbbyte $KEY_S)
            UNICODE_161=$(construct_kbbyte $KEY_LEFT_BRACE)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_7A=$(construct_kbbyte $KEY_Y)
            UNICODE_17E=$(construct_kbbyte $KEY_BACKSLASH)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_79=$(construct_kbbyte $KEY_Z)
            ASCII_71=$(construct_kbbyte $KEY_Q)
            ASCII_77=$(construct_kbbyte $KEY_W)
            UNICODE_107=$(construct_kbbyte $KEY_QUOTE)
            UNICODE_111=$(construct_kbbyte $KEY_RIGHT_BRACE)
            ## A B C Č D E F G H I J K L M N O P R S Š T U V Z Ž X Y Q W Ć Đ
            ASCII_41=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            UNICODE_10C=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            UNICODE_160=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            UNICODE_17D=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            UNICODE_106=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_SHIFT)
            UNICODE_110=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_SHIFT)
            ## Symbols ## ! " # $ % & / ( ) = ? * < >  , ; . : - _ [ ] ~ ` \ | € ÷ × ł Ł ß ¤ { } § @
            ASCII_21=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_22=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_23=$(construct_kbbyte $KEY_3 $MODIFIERKEY_SHIFT)
            ASCII_24=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ASCII_25=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_26=$(construct_kbbyte $KEY_6 $MODIFIERKEY_SHIFT)
            ASCII_2F=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_28=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_29=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_3D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ASCII_3F=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ASCII_2A=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_SHIFT)
            ASCII_27=$(construct_kbbyte $KEY_MINUS)
            ASCII_2B=$(construct_kbbyte $KEY_EQUAL)
            ASCII_7E=$(construct_kbbyte $KEY_1 $MODIFIERKEY_RIGHT_ALT)
            ASCII_60=$(construct_kbbyte $KEY_7 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5C=$(construct_kbbyte $KEY_Q $MODIFIERKEY_RIGHT_ALT)
            ASCII_7C=$(construct_kbbyte $KEY_W $MODIFIERKEY_RIGHT_ALT)
            UNICODE_20AC=$(construct_kbbyte $KEY_E $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_F7=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_D7=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_RIGHT_ALT)
            ASCII_5B=$(construct_kbbyte $KEY_F $MODIFIERKEY_RIGHT_ALT)
            ASCII_5D=$(construct_kbbyte $KEY_G $MODIFIERKEY_RIGHT_ALT)
            UNICODE_142=$(construct_kbbyte $KEY_K $MODIFIERKEY_RIGHT_ALT)
            UNICODE_141=$(construct_kbbyte $KEY_L $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_DF=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_A4=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_RIGHT_ALT)
            ASCII_3C=$(construct_kbbyte $KEY_NON_US_100)
            ASCII_3E=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_V $MODIFIERKEY_RIGHT_ALT)
            ASCII_7B=$(construct_kbbyte $KEY_B $MODIFIERKEY_RIGHT_ALT)
            ASCII_7D=$(construct_kbbyte $KEY_N $MODIFIERKEY_RIGHT_ALT)
            ASCII_2E=$(construct_kbbyte $KEY_PERIOD)
            ASCII_2D=$(construct_kbbyte $KEY_SLASH)
            ASCII_3A=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ASCII_5F=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ASCII_2C=$(construct_kbbyte $KEY_COMMA)
            ASCII_3B=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ISO_8859_1_A7=$(construct_kbbyte $KEY_M $MODIFIERKEY_RIGHT_ALT)
            ## Not needed chars ## input: ¸ ¨ ˇ ^ ˘ ° ˛ ˙ ´ ˝ ¨ ¸ output: ¸¨ˇ^˘°˛˙´˝¨¸ (notice no space!)
            ISO_8859_1_B8=$(construct_kbbyte $KEY_TILDE)
            ISO_8859_1_A8=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_SHIFT)
            UNICODE_2C7=$(construct_kbbyte $KEY_2 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5E=$(construct_kbbyte $KEY_3 $MODIFIERKEY_RIGHT_ALT)
            UNICODE_2D8=$(construct_kbbyte $KEY_4 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_B0=$(construct_kbbyte $KEY_5 $MODIFIERKEY_RIGHT_ALT)
            UNICODE_2DB=$(construct_kbbyte $KEY_6 $MODIFIERKEY_RIGHT_ALT)
            UNICODE_2D9=$(construct_kbbyte $KEY_8 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_B4=$(construct_kbbyte $KEY_9 $MODIFIERKEY_RIGHT_ALT)
            UNICODE_2DD=$(construct_kbbyte $KEY_0 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_A8=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_B8=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_RIGHT_ALT)
            ## Numbers: 0 1 2 3 4 5 6 7 8 9
            ASCII_30=$(construct_kbbyte $KEY_0)
            ASCII_31=$(construct_kbbyte $KEY_1)
            ASCII_32=$(construct_kbbyte $KEY_2)
            ASCII_33=$(construct_kbbyte $KEY_3)
            ASCII_34=$(construct_kbbyte $KEY_4)
            ASCII_35=$(construct_kbbyte $KEY_5)
            ASCII_36=$(construct_kbbyte $KEY_6)
            ASCII_37=$(construct_kbbyte $KEY_7)
            ASCII_38=$(construct_kbbyte $KEY_8)
            ASCII_39=$(construct_kbbyte $KEY_9)
            ;;
        gb)
            KEY_BACKSLASH='40'
            KEY_ASH='64'
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_21=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_22=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_5C=$(construct_kbbyte $KEY_ASH)
            ASCII_24=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ASCII_25=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_26=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_27=$(construct_kbbyte $KEY_QUOTE)
            ASCII_28=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_29=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ASCII_2A=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_2B=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_SHIFT)
            ASCII_2C=$(construct_kbbyte $KEY_COMMA)
            ASCII_2D=$(construct_kbbyte $KEY_MINUS)
            ASCII_2E=$(construct_kbbyte $KEY_PERIOD)
            ASCII_2F=$(construct_kbbyte $KEY_SLASH)
            ASCII_30=$(construct_kbbyte $KEY_0)
            ASCII_31=$(construct_kbbyte $KEY_1)
            ASCII_32=$(construct_kbbyte $KEY_2)
            ASCII_33=$(construct_kbbyte $KEY_3)
            ASCII_34=$(construct_kbbyte $KEY_4)
            ASCII_35=$(construct_kbbyte $KEY_5)
            ASCII_36=$(construct_kbbyte $KEY_6)
            ASCII_37=$(construct_kbbyte $KEY_7)
            ASCII_38=$(construct_kbbyte $KEY_8)
            ASCII_39=$(construct_kbbyte $KEY_9)
            ASCII_3A=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_SHIFT)
            ASCII_3B=$(construct_kbbyte $KEY_SEMICOLON)
            ASCII_3C=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ASCII_3D=$(construct_kbbyte $KEY_EQUAL)
            ASCII_3E=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ASCII_3F=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_SHIFT )
            ASCII_41=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            ASCII_5B=$(construct_kbbyte $KEY_LEFT_BRACE)
            ASCII_23=$(construct_kbbyte $KEY_BACKSLASH)
            ASCII_5D=$(construct_kbbyte $KEY_RIGHT_BRACE)
            ASCII_5E=$(construct_kbbyte $KEY_6 $MODIFIERKEY_SHIFT)
            ASCII_5F=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ASCII_60=$(construct_kbbyte $KEY_TILDE)
            ASCII_61=$(construct_kbbyte $KEY_A)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_63=$(construct_kbbyte $KEY_C)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_69=$(construct_kbbyte $KEY_I)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ASCII_6D=$(construct_kbbyte $KEY_M)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_71=$(construct_kbbyte $KEY_Q)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_73=$(construct_kbbyte $KEY_S)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_77=$(construct_kbbyte $KEY_W)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_79=$(construct_kbbyte $KEY_Y)
            ASCII_7A=$(construct_kbbyte $KEY_Z)
            ASCII_7B=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_7E=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_SHIFT)
            ASCII_7D=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_7C=$(construct_kbbyte $KEY_ASH $MODIFIERKEY_SHIFT)
            ASCII_7F=$(construct_kbbyte $KEY_BACKSPACE)
            ISO_8859_1_A0=$(construct_kbbyte $KEY_SPACE)
            ISO_8859_1_A3=$(construct_kbbyte $KEY_3 $MODIFIERKEY_SHIFT)
            ISO_8859_1_A6=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_AC=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_SHIFT)
            ISO_8859_1_E9=$(construct_kbbyte $KEY_E $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_ED=$(construct_kbbyte $KEY_I $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_F3=$(construct_kbbyte $KEY_O $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_FA=$(construct_kbbyte $KEY_U $MODIFIERKEY_RIGHT_ALT)
            UNICODE_20AC=$(construct_kbbyte $KEY_4 $MODIFIERKEY_RIGHT_ALT)
            ;;
        fr)
            KEY_NON_US_100='64'
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_21=$(construct_kbbyte $KEY_SLASH)
            ASCII_22=$(construct_kbbyte $KEY_3)
            ASCII_23=$(construct_kbbyte $KEY_3 $MODIFIERKEY_RIGHT_ALT)
            ASCII_24=$(construct_kbbyte $KEY_RIGHT_BRACE)
            ASCII_25=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_SHIFT)
            ASCII_26=$(construct_kbbyte $KEY_1)
            ASCII_27=$(construct_kbbyte $KEY_4)
            ASCII_28=$(construct_kbbyte $KEY_5)
            ASCII_29=$(construct_kbbyte $KEY_MINUS)
            ASCII_2A=$(construct_kbbyte $KEY_BACKSLASH)
            ASCII_2B=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_SHIFT)
            ASCII_2C=$(construct_kbbyte $KEY_M)
            ASCII_2D=$(construct_kbbyte $KEY_6)
            ASCII_2E=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ASCII_2F=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ASCII_30=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ASCII_31=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_32=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_33=$(construct_kbbyte $KEY_3 $MODIFIERKEY_SHIFT)
            ASCII_34=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ASCII_35=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_36=$(construct_kbbyte $KEY_6 $MODIFIERKEY_SHIFT)
            ASCII_37=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_38=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_39=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_3A=$(construct_kbbyte $KEY_PERIOD)
            ASCII_3B=$(construct_kbbyte $KEY_COMMA)
            ASCII_3C=$(construct_kbbyte $KEY_NON_US_100)
            ASCII_3D=$(construct_kbbyte $KEY_EQUAL)
            ASCII_3E=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_SHIFT)
            ASCII_3F=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_0 $MODIFIERKEY_RIGHT_ALT)
            ASCII_41=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            ASCII_5B=$(construct_kbbyte $KEY_5 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5C=$(construct_kbbyte $KEY_8 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5D=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_RIGHT_ALT)
            ASCII_5E=$(construct_kbbyte $KEY_9 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5F=$(construct_kbbyte $KEY_8)
            ASCII_60=$(construct_kbbyte $KEY_7 $MODIFIERKEY_RIGHT_ALT)
            ASCII_61=$(construct_kbbyte $KEY_Q)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_63=$(construct_kbbyte $KEY_C)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_69=$(construct_kbbyte $KEY_I)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ASCII_6D=$(construct_kbbyte $KEY_SEMICOLON)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_71=$(construct_kbbyte $KEY_A)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_73=$(construct_kbbyte $KEY_S)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_77=$(construct_kbbyte $KEY_Z)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_79=$(construct_kbbyte $KEY_Y)
            ASCII_7A=$(construct_kbbyte $KEY_W)
            ASCII_7B=$(construct_kbbyte $KEY_4 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7C=$(construct_kbbyte $KEY_6 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7D=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_RIGHT_ALT)
            ASCII_7E=$(construct_kbbyte $KEY_2 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7F=$(construct_kbbyte $KEY_BACKSPACE)
            ISO_8859_1_A0=$(construct_kbbyte $KEY_SPACE)
            ISO_8859_1_A3=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_SHIFT)
            ISO_8859_1_A4=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_A7=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ISO_8859_1_B0=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ISO_8859_1_B2=$(construct_kbbyte $KEY_TILDE)
            ISO_8859_1_B5=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_SHIFT)
            ISO_8859_1_E0=$(construct_kbbyte $KEY_0)
            ISO_8859_1_E7=$(construct_kbbyte $KEY_9)
            ISO_8859_1_E8=$(construct_kbbyte $KEY_7)
            ISO_8859_1_E9=$(construct_kbbyte $KEY_2)
            ISO_8859_1_F9=$(construct_kbbyte $KEY_COMMA)
            UNICODE_20AC=$(construct_kbbyte $KEY_E $MODIFIERKEY_RIGHT_ALT)
            ;;
        fi)
            KEY_NON_US_100='64'
            ISO_8859_1_A7=$(construct_kbbyte $KEY_TILDE)
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_30=$(construct_kbbyte $KEY_0)
            ASCII_31=$(construct_kbbyte $KEY_1)
            ASCII_32=$(construct_kbbyte $KEY_2)
            ASCII_33=$(construct_kbbyte $KEY_3)
            ASCII_34=$(construct_kbbyte $KEY_4)
            ASCII_35=$(construct_kbbyte $KEY_5)
            ASCII_36=$(construct_kbbyte $KEY_6)
            ASCII_37=$(construct_kbbyte $KEY_7)
            ASCII_38=$(construct_kbbyte $KEY_8)
            ASCII_39=$(construct_kbbyte $KEY_9)
            ASCII_2B=$(construct_kbbyte $KEY_MINUS)
            ISO_8859_1_B4=$(construct_kbbyte $KEY_EQUAL)
            ASCII_71=$(construct_kbbyte $KEY_Q)
            ASCII_77=$(construct_kbbyte $KEY_W)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_79=$(construct_kbbyte $KEY_Y)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_69=$(construct_kbbyte $KEY_I)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_61=$(construct_kbbyte $KEY_A)
            ISO_8859_1_E4=$(construct_kbbyte $KEY_RIGHT_BRACE)
            ASCII_73=$(construct_kbbyte $KEY_S)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ISO_8859_1_F6=$(construct_kbbyte $KEY_SEMICOLON)
            ISO_8859_1_E4=$(construct_kbbyte $KEY_QUOTE)
            ASCII_27=$(construct_kbbyte $KEY_BACKSLASH)
            ASCII_3C=$(construct_kbbyte $KEY_NON_US_100)
            ASCII_7A=$(construct_kbbyte $KEY_Z)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_63=$(construct_kbbyte $KEY_C)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6D=$(construct_kbbyte $KEY_M)
            ASCII_2C=$(construct_kbbyte $KEY_COMMA)
            ASCII_2E=$(construct_kbbyte $KEY_PERIOD)
            ASCII_2D=$(construct_kbbyte $KEY_SLASH)
            ASCII_21=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_22=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_23=$(construct_kbbyte $KEY_3 $MODIFIERKEY_SHIFT)
            ISO_8859_1_A4=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ASCII_25=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_26=$(construct_kbbyte $KEY_6 $MODIFIERKEY_SHIFT)
            ASCII_2F=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_28=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_29=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_3D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ASCII_3F=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ASCII_60=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_41=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_5E=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ISO_8859_1_D6=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_SHIFT)
            ISO_8859_1_C4=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_SHIFT)
            ASCII_2A=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_SHIFT)
            ASCII_3E=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_3B=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ASCII_3A=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ASCII_5F=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_2 $MODIFIERKEY_RIGHT_ALT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_24=$(construct_kbbyte $KEY_4 $MODIFIERKEY_RIGHT_ALT)
            UNICODE_20AC=$(construct_kbbyte $KEY_E $MODIFIERKEY_RIGHT_ALT)
            ASCII_7B=$(construct_kbbyte $KEY_7 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5B=$(construct_kbbyte $KEY_8 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5D=$(construct_kbbyte $KEY_9 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5C=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_RIGHT_ALT)
            ASCII_7E=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_RIGHT_ALT)
            ASCII_7C=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_B5=$(construct_kbbyte $KEY_M $MODIFIERKEY_RIGHT_ALT)
            ;;
        es)
            KEY_NON_US_100='64'
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_21=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_22=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_23=$(construct_kbbyte $KEY_3 $MODIFIERKEY_RIGHT_ALT)
            ASCII_24=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ASCII_25=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_26=$(construct_kbbyte $KEY_6 $MODIFIERKEY_SHIFT)
            ASCII_27=$(construct_kbbyte $KEY_MINUS)
            ASCII_28=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_29=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_2A=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_2B=$(construct_kbbyte $KEY_RIGHT_BRACE)
            ASCII_2C=$(construct_kbbyte $KEY_COMMA)
            ASCII_2D=$(construct_kbbyte $KEY_SLASH)
            ASCII_2E=$(construct_kbbyte $KEY_PERIOD)
            ASCII_2F=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_30=$(construct_kbbyte $KEY_0)
            ASCII_31=$(construct_kbbyte $KEY_1)
            ASCII_32=$(construct_kbbyte $KEY_2)
            ASCII_33=$(construct_kbbyte $KEY_3)
            ASCII_34=$(construct_kbbyte $KEY_4)
            ASCII_35=$(construct_kbbyte $KEY_5)
            ASCII_36=$(construct_kbbyte $KEY_6)
            ASCII_37=$(construct_kbbyte $KEY_7)
            ASCII_38=$(construct_kbbyte $KEY_8)
            ASCII_39=$(construct_kbbyte $KEY_9)
            ASCII_3A=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ASCII_3B=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ASCII_3C=$(construct_kbbyte $KEY_NON_US_100)
            ASCII_3D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ASCII_3E=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_SHIFT)
            ASCII_3F=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_2 $MODIFIERKEY_RIGHT_ALT)
            ASCII_41=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            ASCII_5B=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_RIGHT_ALT)
            ASCII_5C=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_RIGHT_ALT)
            ASCII_5D=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_RIGHT_ALT)
            ASCII_5E=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_5F=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ASCII_61=$(construct_kbbyte $KEY_A)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_63=$(construct_kbbyte $KEY_C)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_69=$(construct_kbbyte $KEY_I)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ASCII_6D=$(construct_kbbyte $KEY_M)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_71=$(construct_kbbyte $KEY_Q)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_73=$(construct_kbbyte $KEY_S)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_77=$(construct_kbbyte $KEY_W)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_79=$(construct_kbbyte $KEY_Y)
            ASCII_7A=$(construct_kbbyte $KEY_Z)
            ASCII_7B=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_RIGHT_ALT $MODIFIERKEY_SHIFT)
            ASCII_7C=$(construct_kbbyte $KEY_1 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7D=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_RIGHT_ALT $MODIFIERKEY_SHIFT)
            ASCII_7E=$(construct_kbbyte $KEY_4 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_BA=$(construct_kbbyte $KEY_TILDE)
            ISO_8859_1_E0=$(construct_kbbyte $KEY_QUOTE)
            ISO_8859_1_E8=$(construct_kbbyte $KEY_LEFT_BRACE)
            ISO_8859_1_E9=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_SHIFT)
            ISO_8859_1_EC=$(construct_kbbyte $KEY_EQUAL)
            ISO_8859_1_F2=$(construct_kbbyte $KEY_SEMICOLON)
            ISO_8859_1_F9=$(construct_kbbyte $KEY_BACKSLASH)
            ;;
        dk)
            KEY_NON_US_100='64'
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_21=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_22=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_23=$(construct_kbbyte $KEY_3 $MODIFIERKEY_SHIFT)
            ASCII_24=$(construct_kbbyte $KEY_4 $MODIFIERKEY_RIGHT_ALT)
            ASCII_25=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_26=$(construct_kbbyte $KEY_6 $MODIFIERKEY_SHIFT)
            ASCII_27=$(construct_kbbyte $KEY_BACKSLASH)
            ASCII_28=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_29=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_2A=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_SHIFT)
            ASCII_2B=$(construct_kbbyte $KEY_MINUS)
            ASCII_2C=$(construct_kbbyte $KEY_COMMA)
            ASCII_2D=$(construct_kbbyte $KEY_SLASH)
            ASCII_2E=$(construct_kbbyte $KEY_PERIOD)
            ASCII_2F=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_30=$(construct_kbbyte $KEY_0)
            ASCII_31=$(construct_kbbyte $KEY_1)
            ASCII_32=$(construct_kbbyte $KEY_2)
            ASCII_33=$(construct_kbbyte $KEY_3)
            ASCII_34=$(construct_kbbyte $KEY_4)
            ASCII_35=$(construct_kbbyte $KEY_5)
            ASCII_36=$(construct_kbbyte $KEY_6)
            ASCII_37=$(construct_kbbyte $KEY_7)
            ASCII_38=$(construct_kbbyte $KEY_8)
            ASCII_39=$(construct_kbbyte $KEY_9)
            ASCII_3A=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ASCII_3B=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ASCII_3C=$(construct_kbbyte $KEY_NON_US_100)
            ASCII_3D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ASCII_3E=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_SHIFT)
            ASCII_3F=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_2 $MODIFIERKEY_RIGHT_ALT)
            ASCII_41=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            ASCII_5B=$(construct_kbbyte $KEY_8 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5C=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5D=$(construct_kbbyte $KEY_9 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5F=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ASCII_61=$(construct_kbbyte $KEY_A)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_63=$(construct_kbbyte $KEY_C)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_69=$(construct_kbbyte $KEY_I)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ASCII_6D=$(construct_kbbyte $KEY_M)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_71=$(construct_kbbyte $KEY_Q)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_73=$(construct_kbbyte $KEY_S)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_77=$(construct_kbbyte $KEY_W)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_79=$(construct_kbbyte $KEY_Y)
            ASCII_7A=$(construct_kbbyte $KEY_Z)
            ASCII_7B=$(construct_kbbyte $KEY_7 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7C=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_RIGHT_ALT)
            ASCII_7D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7E=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_RIGHT_ALT)
            ASCII_7F=$(construct_kbbyte $KEY_BACKSPACE)
            ISO_8859_1_A0=$(construct_kbbyte $KEY_SPACE)
            ISO_8859_1_A3=$(construct_kbbyte $KEY_3 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_A4=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ISO_8859_1_A7=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_SHIFT)
            ISO_8859_1_AB=$(construct_kbbyte $KEY_4)
            ISO_8859_1_B5=$(construct_kbbyte $KEY_M $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_BD=$(construct_kbbyte $KEY_TILDE)
            ISO_8859_1_C5=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_SHIFT)
            ISO_8859_1_C6=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_SHIFT)
            ISO_8859_1_D8=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_SHIFT)
            ISO_8859_1_DF=$(construct_kbbyte $KEY_S $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_E5=$(construct_kbbyte $KEY_LEFT_BRACE)
            ISO_8859_1_E6=$(construct_kbbyte $KEY_SEMICOLON)
            ISO_8859_1_F0=$(construct_kbbyte $KEY_D $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_F8=$(construct_kbbyte $KEY_QUOTE)
            ISO_8859_1_FE=$(construct_kbbyte $KEY_T $MODIFIERKEY_RIGHT_ALT)
            UNICODE_20AC=$(construct_kbbyte $KEY_E $MODIFIERKEY_RIGHT_ALT)
            ;;
        de)
            KEY_NON_US_100='64'
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_21=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_22=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_23=$(construct_kbbyte $KEY_BACKSLASH)
            ASCII_24=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ASCII_25=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_26=$(construct_kbbyte $KEY_6 $MODIFIERKEY_SHIFT)
            ASCII_27=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_SHIFT)
            ASCII_28=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_29=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_2A=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_2B=$(construct_kbbyte $KEY_RIGHT_BRACE)
            ASCII_2C=$(construct_kbbyte $KEY_COMMA)
            ASCII_2D=$(construct_kbbyte $KEY_SLASH)
            ASCII_2E=$(construct_kbbyte $KEY_PERIOD)
            ASCII_2F=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_30=$(construct_kbbyte $KEY_0)
            ASCII_31=$(construct_kbbyte $KEY_1)
            ASCII_32=$(construct_kbbyte $KEY_2)
            ASCII_33=$(construct_kbbyte $KEY_3)
            ASCII_34=$(construct_kbbyte $KEY_4)
            ASCII_35=$(construct_kbbyte $KEY_5)
            ASCII_36=$(construct_kbbyte $KEY_6)
            ASCII_37=$(construct_kbbyte $KEY_7)
            ASCII_38=$(construct_kbbyte $KEY_8)
            ASCII_39=$(construct_kbbyte $KEY_9)
            ASCII_3A=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ASCII_3B=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ASCII_3C=$(construct_kbbyte $KEY_NON_US_100)
            ASCII_3D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ASCII_3E=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_SHIFT)
            ASCII_3F=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_Q $MODIFIERKEY_RIGHT_ALT)
            ASCII_41=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_5B=$(construct_kbbyte $KEY_8 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5C=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_RIGHT_ALT)
            ASCII_5D=$(construct_kbbyte $KEY_9 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5E=$(construct_kbbyte $KEY_TILDE)
            ASCII_5F=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ASCII_60=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_SHIFT)
            ASCII_61=$(construct_kbbyte $KEY_A)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_63=$(construct_kbbyte $KEY_C)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_69=$(construct_kbbyte $KEY_I)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ASCII_6D=$(construct_kbbyte $KEY_M)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_71=$(construct_kbbyte $KEY_Q)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_73=$(construct_kbbyte $KEY_S)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_77=$(construct_kbbyte $KEY_W)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_79=$(construct_kbbyte $KEY_Z)
            ASCII_7A=$(construct_kbbyte $KEY_Y)
            ASCII_7B=$(construct_kbbyte $KEY_7 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7C=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_RIGHT_ALT )
            ASCII_7D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7E=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_RIGHT_ALT )
            ASCII_7F=$(construct_kbbyte $KEY_BACKSPACE)
            ISO_8859_1_A0=$(construct_kbbyte $KEY_SPACE)
            ISO_8859_1_A4=$(construct_kbbyte $KEY_E $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_A7=$(construct_kbbyte $KEY_3 $MODIFIERKEY_SHIFT)
            ISO_8859_1_B0=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_SHIFT)
            ISO_8859_1_B2=$(construct_kbbyte $KEY_2 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_B3=$(construct_kbbyte $KEY_3 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_C4=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_SHIFT)
            ISO_8859_1_D6=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_SHIFT)
            ISO_8859_1_DC=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_SHIFT)
            ISO_8859_1_DF=$(construct_kbbyte $KEY_MINUS)
            ISO_8859_1_E4=$(construct_kbbyte $KEY_QUOTE)
            ISO_8859_1_F6=$(construct_kbbyte $KEY_SEMICOLON)
            ISO_8859_1_FC=$(construct_kbbyte $KEY_LEFT_BRACE)
            UNICODE_20AC=$(construct_kbbyte $KEY_E $MODIFIERKEY_RIGHT_ALT)
            ;;
        ca)
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_21=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_22=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_23=$(construct_kbbyte $KEY_TILDE)
            ASCII_24=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ASCII_25=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_26=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_27=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ASCII_28=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_29=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ASCII_2A=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_2B=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_SHIFT)
            ASCII_2C=$(construct_kbbyte $KEY_COMMA)
            ASCII_2D=$(construct_kbbyte $KEY_MINUS)
            ASCII_2E=$(construct_kbbyte $KEY_PERIOD)
            ASCII_2F=$(construct_kbbyte $KEY_3 $MODIFIERKEY_SHIFT)
            ASCII_30=$(construct_kbbyte $KEY_0)
            ASCII_31=$(construct_kbbyte $KEY_1)
            ASCII_32=$(construct_kbbyte $KEY_2)
            ASCII_33=$(construct_kbbyte $KEY_3)
            ASCII_34=$(construct_kbbyte $KEY_4)
            ASCII_35=$(construct_kbbyte $KEY_5)
            ASCII_36=$(construct_kbbyte $KEY_6)
            ASCII_37=$(construct_kbbyte $KEY_7)
            ASCII_38=$(construct_kbbyte $KEY_8)
            ASCII_39=$(construct_kbbyte $KEY_9)
            ASCII_3A=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_SHIFT)
            ASCII_3B=$(construct_kbbyte $KEY_SEMICOLON)
            ASCII_3C=$(construct_kbbyte $KEY_BACKSLASH)
            ASCII_3D=$(construct_kbbyte $KEY_EQUAL)
            ASCII_3E=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_SHIFT)
            ASCII_3F=$(construct_kbbyte $KEY_6 $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_2 $MODIFIERKEY_RIGHT_ALT)
            ASCII_41=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            ASCII_5B=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_RIGHT_ALT)
            ASCII_5C=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_RIGHT_ALT)
            ASCII_5D=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_RIGHT_ALT)
            ASCII_5E=$(construct_kbbyte $KEY_LEFT_BRACE)
            ASCII_5F=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ASCII_60=$(construct_kbbyte $KEY_QUOTE)
            ASCII_61=$(construct_kbbyte $KEY_A)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_63=$(construct_kbbyte $KEY_C)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_69=$(construct_kbbyte $KEY_I)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ASCII_6D=$(construct_kbbyte $KEY_M)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_71=$(construct_kbbyte $KEY_Q)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_73=$(construct_kbbyte $KEY_S)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_77=$(construct_kbbyte $KEY_W)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_79=$(construct_kbbyte $KEY_Y)
            ASCII_7A=$(construct_kbbyte $KEY_Z)
            ASCII_7B=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_RIGHT_ALT)
            ASCII_7C=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_SHIFT)
            ASCII_7D=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_RIGHT_ALT)
            ASCII_7E=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_RIGHT_ALT)
            ASCII_7F=$(construct_kbbyte $KEY_BACKSPACE)
            ISO_8859_1_A2=$(construct_kbbyte $KEY_4 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_A3=$(construct_kbbyte $KEY_3 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_A4=$(construct_kbbyte $KEY_5 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_A6=$(construct_kbbyte $KEY_7 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_A7=$(construct_kbbyte $KEY_O $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_A8=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_SHIFT)
            ISO_8859_1_AC=$(construct_kbbyte $KEY_6 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_AD=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_AF=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_B4=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_B5=$(construct_kbbyte $KEY_M $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_B6=$(construct_kbbyte $KEY_P $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_B8=$(construct_kbbyte $KEY_RIGHT_BRACE)
            ISO_8859_1_B1=$(construct_kbbyte $KEY_1 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_B2=$(construct_kbbyte $KEY_8 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_B3=$(construct_kbbyte $KEY_9 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_BC=$(construct_kbbyte $KEY_0 $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_BD=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_BE=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_C9=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ISO_8859_1_E9=$(construct_kbbyte $KEY_SLASH)
            ;;
        br)
            KEY_NON_US_100='64'
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_61=$(construct_kbbyte $KEY_A)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_63=$(construct_kbbyte $KEY_C)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_69=$(construct_kbbyte $KEY_I)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ASCII_6D=$(construct_kbbyte $KEY_M)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_73=$(construct_kbbyte $KEY_S)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_7A=$(construct_kbbyte $KEY_Z)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_77=$(construct_kbbyte $KEY_W)
            ASCII_79=$(construct_kbbyte $KEY_Y)
            ASCII_71=$(construct_kbbyte $KEY_Q)
            ISO_8859_1_E7=$(construct_kbbyte $KEY_SEMICOLON)
            ASCII_41=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ISO_8859_1_C7=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_SHIFT)
            ASCII_27=$(construct_kbbyte $KEY_TILDE)
            ASCII_21=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_23=$(construct_kbbyte $KEY_3 $MODIFIERKEY_SHIFT)
            ASCII_24=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ASCII_25=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_26=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_2A=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_28=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_29=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ASCII_5F=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ASCII_2B=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_SHIFT)
            ASCII_22=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_SHIFT)
            ASCII_2D=$(construct_kbbyte $KEY_MINUS)
            ASCII_3D=$(construct_kbbyte $KEY_EQUAL)
            ASCII_2F=$(construct_kbbyte $KEY_Q $MODIFIERKEY_RIGHT_ALT)
            ASCII_3F=$(construct_kbbyte $KEY_W $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_B0=$(construct_kbbyte $KEY_E $MODIFIERKEY_RIGHT_ALT)
            ASCII_5B=$(construct_kbbyte $KEY_RIGHT_BRACE)
            ASCII_5D=$(construct_kbbyte $KEY_BACKSLASH)
            ASCII_7B=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_7D=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_SHIFT)
            ASCII_5C=$(construct_kbbyte $KEY_NON_US_100)
            ASCII_2C=$(construct_kbbyte $KEY_COMMA)
            ASCII_2E=$(construct_kbbyte $KEY_PERIOD)
            ASCII_3B=$(construct_kbbyte $KEY_SLASH)
            ASCII_3C=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ASCII_3E=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ASCII_3A=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ISO_8859_1_A7=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_RIGHT_ALT)
            ISO_8859_1_B4=$(construct_kbbyte $KEY_LEFT_BRACE)
            ASCII_7E=$(construct_kbbyte $KEY_QUOTE)
            ASCII_7C=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_SHIFT)
            ASCII_5E=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_SHIFT)
            ASCII_60=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_30=$(construct_kbbyte $KEY_0)
            ASCII_31=$(construct_kbbyte $KEY_1)
            ASCII_32=$(construct_kbbyte $KEY_2)
            ASCII_33=$(construct_kbbyte $KEY_3)
            ASCII_34=$(construct_kbbyte $KEY_4)
            ASCII_35=$(construct_kbbyte $KEY_5)
            ASCII_36=$(construct_kbbyte $KEY_6)
            ASCII_37=$(construct_kbbyte $KEY_7)
            ASCII_38=$(construct_kbbyte $KEY_8)
            ASCII_39=$(construct_kbbyte $KEY_9)
            ;;
        be)
            KEY_NON_US_100='64'
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_21=$(construct_kbbyte $KEY_8)
            ASCII_22=$(construct_kbbyte $KEY_3)
            ASCII_23=$(construct_kbbyte $KEY_3 $MODIFIERKEY_RIGHT_ALT)
            ASCII_24=$(construct_kbbyte $KEY_RIGHT_BRACE)
            ASCII_25=$(construct_kbbyte $KEY_QUOTE $MODIFIERKEY_SHIFT)
            ASCII_26=$(construct_kbbyte $KEY_1)
            ASCII_27=$(construct_kbbyte $KEY_4)
            ASCII_28=$(construct_kbbyte $KEY_5)
            ASCII_29=$(construct_kbbyte $KEY_MINUS)
            ASCII_2A=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_SHIFT)
            ASCII_2B=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ASCII_2C=$(construct_kbbyte $KEY_M)
            ASCII_2D=$(construct_kbbyte $KEY_EQUAL)
            ASCII_2E=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ASCII_2F=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ASCII_30=$(construct_kbbyte $KEY_0 $MODIFIERKEY_SHIFT)
            ASCII_31=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_32=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_33=$(construct_kbbyte $KEY_3 $MODIFIERKEY_SHIFT)
            ASCII_34=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ASCII_35=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_36=$(construct_kbbyte $KEY_6 $MODIFIERKEY_SHIFT)
            ASCII_37=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_38=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_39=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_3A=$(construct_kbbyte $KEY_PERIOD)
            ASCII_3B=$(construct_kbbyte $KEY_COMMA)
            ASCII_3C=$(construct_kbbyte $KEY_NON_US_100)
            ASCII_3D=$(construct_kbbyte $KEY_SLASH)
            ASCII_3E=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_SHIFT)
            ASCII_3F=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_2 $MODIFIERKEY_RIGHT_ALT)
            ASCII_41=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            ASCII_5B=$(construct_kbbyte $KEY_RIGHT_BRACE $MODIFIERKEY_RIGHT_ALT)
            ASCII_5C=$(construct_kbbyte $KEY_NON_US_100 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5D=$(construct_kbbyte $KEY_LEFT_BRACE $MODIFIERKEY_RIGHT_ALT)
            ASCII_5E=$(construct_kbbyte $KEY_6 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5F=$(construct_kbbyte $KEY_EQUAL $MODIFIERKEY_SHIFT)
            ASCII_60=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_RIGHT_ALT)
            ASCII_61=$(construct_kbbyte $KEY_Q)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_63=$(construct_kbbyte $KEY_C)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_69=$(construct_kbbyte $KEY_I)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ASCII_6D=$(construct_kbbyte $KEY_SEMICOLON)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_71=$(construct_kbbyte $KEY_A)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_73=$(construct_kbbyte $KEY_S)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_77=$(construct_kbbyte $KEY_Z)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_79=$(construct_kbbyte $KEY_Y)
            ASCII_7A=$(construct_kbbyte $KEY_W)
            ASCII_7B=$(construct_kbbyte $KEY_9 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7C=$(construct_kbbyte $KEY_1 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7D=$(construct_kbbyte $KEY_0 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7E=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_RIGHT_ALT)
            ASCII_7F=$(construct_kbbyte $KEY_BACKSPACE)
            ISO_8859_1_A0=$(construct_kbbyte $KEY_SPACE)
            ISO_8859_1_A3=$(construct_kbbyte $KEY_BACKSLASH $MODIFIERKEY_SHIFT)
            ISO_8859_1_A7=$(construct_kbbyte $KEY_6)
            ISO_8859_1_B0=$(construct_kbbyte $KEY_MINUS $MODIFIERKEY_SHIFT)
            ISO_8859_1_B2=$(construct_kbbyte $KEY_TILDE)
            ISO_8859_1_B3=$(construct_kbbyte $KEY_TILDE $MODIFIERKEY_SHIFT)
            ISO_8859_1_B5=$(construct_kbbyte $KEY_BACKSLASH)
            ISO_8859_1_E0=$(construct_kbbyte $KEY_0)
            ISO_8859_1_E7=$(construct_kbbyte $KEY_9)
            ISO_8859_1_E8=$(construct_kbbyte $KEY_7)
            ISO_8859_1_E9=$(construct_kbbyte $KEY_2)
            ISO_8859_1_F9=$(construct_kbbyte $KEY_QUOTE)
            UNICODE_20AC=$(construct_kbbyte $KEY_E $MODIFIERKEY_RIGHT_ALT)
            ;;
        hu)
            ASCII_20=$(construct_kbbyte $KEY_SPACE)
            ASCII_21=$(construct_kbbyte $KEY_4 $MODIFIERKEY_SHIFT)
            ASCII_22=$(construct_kbbyte $KEY_2 $MODIFIERKEY_SHIFT)
            ASCII_23=$(construct_kbbyte $KEY_X $MODIFIERKEY_RIGHT_ALT)
            ASCII_24=$(construct_kbbyte $KEY_SEMICOLON $MODIFIERKEY_RIGHT_ALT)
            ASCII_25=$(construct_kbbyte $KEY_5 $MODIFIERKEY_SHIFT)
            ASCII_26=$(construct_kbbyte $KEY_C $MODIFIERKEY_RIGHT_ALT)
            ASCII_27=$(construct_kbbyte $KEY_1 $MODIFIERKEY_SHIFT)
            ASCII_28=$(construct_kbbyte $KEY_8 $MODIFIERKEY_SHIFT)
            ASCII_29=$(construct_kbbyte $KEY_9 $MODIFIERKEY_SHIFT)
            ASCII_2A=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_RIGHT_ALT)
            ASCII_2B=$(construct_kbbyte $KEY_3 $MODIFIERKEY_SHIFT)
            ASCII_2C=$(construct_kbbyte $KEY_COMMA)
            ASCII_2D=$(construct_kbbyte $KEY_SLASH)
            ASCII_2E=$(construct_kbbyte $KEY_PERIOD)
            ASCII_2F=$(construct_kbbyte $KEY_6 $MODIFIERKEY_SHIFT)
            ASCII_30=$(construct_kbbyte $KEY_TILDE)
            ASCII_31=$(construct_kbbyte $KEY_1)
            ASCII_32=$(construct_kbbyte $KEY_2)
            ASCII_33=$(construct_kbbyte $KEY_3)
            ASCII_34=$(construct_kbbyte $KEY_4)
            ASCII_35=$(construct_kbbyte $KEY_5)
            ASCII_36=$(construct_kbbyte $KEY_6)
            ASCII_37=$(construct_kbbyte $KEY_7)
            ASCII_38=$(construct_kbbyte $KEY_8)
            ASCII_39=$(construct_kbbyte $KEY_9)
            ASCII_3A=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_SHIFT)
            ASCII_3B=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_RIGHT_ALT)
            ASCII_3C=$(construct_kbbyte $KEY_M $MODIFIERKEY_RIGHT_ALT)
            ASCII_3D=$(construct_kbbyte $KEY_7 $MODIFIERKEY_SHIFT)
            ASCII_3E=$(construct_kbbyte $KEY_PERIOD $MODIFIERKEY_RIGHT_ALT)
            ASCII_3F=$(construct_kbbyte $KEY_COMMA $MODIFIERKEY_SHIFT)
            ASCII_40=$(construct_kbbyte $KEY_V $MODIFIERKEY_RIGHT_ALT)
            ASCII_41=$(construct_kbbyte $KEY_A $MODIFIERKEY_SHIFT)
            ASCII_42=$(construct_kbbyte $KEY_B $MODIFIERKEY_SHIFT)
            ASCII_43=$(construct_kbbyte $KEY_C $MODIFIERKEY_SHIFT)
            ASCII_44=$(construct_kbbyte $KEY_D $MODIFIERKEY_SHIFT)
            ASCII_45=$(construct_kbbyte $KEY_E $MODIFIERKEY_SHIFT)
            ASCII_46=$(construct_kbbyte $KEY_F $MODIFIERKEY_SHIFT)
            ASCII_47=$(construct_kbbyte $KEY_G $MODIFIERKEY_SHIFT)
            ASCII_48=$(construct_kbbyte $KEY_H $MODIFIERKEY_SHIFT)
            ASCII_49=$(construct_kbbyte $KEY_I $MODIFIERKEY_SHIFT)
            ASCII_4A=$(construct_kbbyte $KEY_J $MODIFIERKEY_SHIFT)
            ASCII_4B=$(construct_kbbyte $KEY_K $MODIFIERKEY_SHIFT)
            ASCII_4C=$(construct_kbbyte $KEY_L $MODIFIERKEY_SHIFT)
            ASCII_4D=$(construct_kbbyte $KEY_M $MODIFIERKEY_SHIFT)
            ASCII_4E=$(construct_kbbyte $KEY_N $MODIFIERKEY_SHIFT)
            ASCII_4F=$(construct_kbbyte $KEY_O $MODIFIERKEY_SHIFT)
            ASCII_50=$(construct_kbbyte $KEY_P $MODIFIERKEY_SHIFT)
            ASCII_51=$(construct_kbbyte $KEY_Q $MODIFIERKEY_SHIFT)
            ASCII_52=$(construct_kbbyte $KEY_R $MODIFIERKEY_SHIFT)
            ASCII_53=$(construct_kbbyte $KEY_S $MODIFIERKEY_SHIFT)
            ASCII_54=$(construct_kbbyte $KEY_T $MODIFIERKEY_SHIFT)
            ASCII_55=$(construct_kbbyte $KEY_U $MODIFIERKEY_SHIFT)
            ASCII_56=$(construct_kbbyte $KEY_V $MODIFIERKEY_SHIFT)
            ASCII_57=$(construct_kbbyte $KEY_W $MODIFIERKEY_SHIFT)
            ASCII_58=$(construct_kbbyte $KEY_X $MODIFIERKEY_SHIFT)
            ASCII_59=$(construct_kbbyte $KEY_Z $MODIFIERKEY_SHIFT)
            ASCII_5A=$(construct_kbbyte $KEY_Y $MODIFIERKEY_SHIFT)
            ASCII_5B=$(construct_kbbyte $KEY_F $MODIFIERKEY_RIGHT_ALT)
            ASCII_5C=$(construct_kbbyte $KEY_Q $MODIFIERKEY_RIGHT_ALT)
            ASCII_5D=$(construct_kbbyte $KEY_G $MODIFIERKEY_RIGHT_ALT)
            ASCII_5E=$(construct_kbbyte $KEY_3 $MODIFIERKEY_RIGHT_ALT)
            ASCII_5F=$(construct_kbbyte $KEY_SLASH $MODIFIERKEY_SHIFT)
            ASCII_60=$(construct_kbbyte $KEY_7 $MODIFIERKEY_RIGHT_ALT)
            ASCII_61=$(construct_kbbyte $KEY_A)
            ASCII_62=$(construct_kbbyte $KEY_B)
            ASCII_63=$(construct_kbbyte $KEY_C)
            ASCII_64=$(construct_kbbyte $KEY_D)
            ASCII_65=$(construct_kbbyte $KEY_E)
            ASCII_66=$(construct_kbbyte $KEY_F)
            ASCII_67=$(construct_kbbyte $KEY_G)
            ASCII_68=$(construct_kbbyte $KEY_H)
            ASCII_69=$(construct_kbbyte $KEY_I)
            ASCII_6A=$(construct_kbbyte $KEY_J)
            ASCII_6B=$(construct_kbbyte $KEY_K)
            ASCII_6C=$(construct_kbbyte $KEY_L)
            ASCII_6D=$(construct_kbbyte $KEY_M)
            ASCII_6E=$(construct_kbbyte $KEY_N)
            ASCII_6F=$(construct_kbbyte $KEY_O)
            ASCII_70=$(construct_kbbyte $KEY_P)
            ASCII_71=$(construct_kbbyte $KEY_Q)
            ASCII_72=$(construct_kbbyte $KEY_R)
            ASCII_73=$(construct_kbbyte $KEY_S)
            ASCII_74=$(construct_kbbyte $KEY_T)
            ASCII_75=$(construct_kbbyte $KEY_U)
            ASCII_76=$(construct_kbbyte $KEY_V)
            ASCII_77=$(construct_kbbyte $KEY_W)
            ASCII_78=$(construct_kbbyte $KEY_X)
            ASCII_79=$(construct_kbbyte $KEY_Z)
            ASCII_7A=$(construct_kbbyte $KEY_Y)
            ASCII_7B=$(construct_kbbyte $KEY_B $MODIFIERKEY_RIGHT_ALT)
            ASCII_7C=$(construct_kbbyte $KEY_W $MODIFIERKEY_RIGHT_ALT)
            ASCII_7D=$(construct_kbbyte $KEY_N $MODIFIERKEY_RIGHT_ALT)
            ASCII_7E=$(construct_kbbyte $KEY_1 $MODIFIERKEY_RIGHT_ALT)
            ASCII_7F=$(construct_kbbyte $KEY_BACKSPACE)
            ;;
    esac
}

## This function is to select whether ASCII/ISO_8859_1/ISO_8859_5 is defined, and will be passed to write_kb_code() the defined one.
## Because same characters coexist in ASCII/ISO_8859_1/ISO_8859_5, and we need to find out which one is defined.
function get_defined_variables(){
    local VAR_NAMES
    VAR_NAMES=($@)
    local VAR_VALUE
    for i in ${VAR_NAMES[@]}; do
        VAR_VALUE=$(eval echo \$$i)
        if [ ! -z $VAR_VALUE ]; then
            echo $i
            break
        fi
    done
}

## Parsing the "STRING <the string to be parsed>", and char by char in hex code.
## i.e. " " will be parsed as "20", it will then execute "write_kb_code $ASCII_20;;"
function convert_ducky(){
    case "$1" in
        ## ASCII chars
        "20") write_kb_code $ASCII_20;;
        "20") eval write_kb_code \$$(get_defined_variables ASCII_20);;
        "21") eval write_kb_code \$$(get_defined_variables ASCII_21 ISO_8859_5_21);;
        "22") write_kb_code $ASCII_22;;
        "23") write_kb_code $ASCII_23;;
        "24") eval write_kb_code \$$(get_defined_variables ASCII_24 ISO_8859_5_24);;
        "25") eval write_kb_code \$$(get_defined_variables ASCII_25 ISO_8859_5_25);;
        "26") write_kb_code $ASCII_26;;
        "27") write_kb_code $ASCII_27;;
        "28") eval write_kb_code \$$(get_defined_variables ASCII_28 ISO_8859_5_28);;
        "29") eval write_kb_code \$$(get_defined_variables ASCII_29 ISO_8859_5_29);;
        "2a") eval write_kb_code \$$(get_defined_variables ASCII_2A ISO_8859_5_2A);;
        "2b") write_kb_code $ASCII_2B;;
        "2c") eval write_kb_code \$$(get_defined_variables ASCII_2C ISO_8859_5_2C);;
        "2d") eval write_kb_code \$$(get_defined_variables ASCII_2D ISO_8859_5_2D);;
        "2e") eval write_kb_code \$$(get_defined_variables ASCII_2E ISO_8859_5_2E);;
        "2f") eval write_kb_code \$$(get_defined_variables ASCII_2F ISO_8859_5_2F);;
        "30") eval write_kb_code \$$(get_defined_variables ASCII_30 ISO_8859_5_30);;
        "31") eval write_kb_code \$$(get_defined_variables ASCII_31 ISO_8859_5_31);;
        "32") eval write_kb_code \$$(get_defined_variables ASCII_32 ISO_8859_5_32);;
        "33") eval write_kb_code \$$(get_defined_variables ASCII_33 ISO_8859_5_33);;
        "34") eval write_kb_code \$$(get_defined_variables ASCII_34 ISO_8859_5_34);;
        "35") eval write_kb_code \$$(get_defined_variables ASCII_35 ISO_8859_5_35);;
        "36") eval write_kb_code \$$(get_defined_variables ASCII_36 ISO_8859_5_36);;
        "37") eval write_kb_code \$$(get_defined_variables ASCII_37 ISO_8859_5_37);;
        "38") eval write_kb_code \$$(get_defined_variables ASCII_38 ISO_8859_5_38);;
        "39") eval write_kb_code \$$(get_defined_variables ASCII_39 ISO_8859_5_39);;
        "3a") eval write_kb_code \$$(get_defined_variables ASCII_3A ISO_8859_5_3A);;
        "3b") eval write_kb_code \$$(get_defined_variables ASCII_3B ISO_8859_5_3B);;
        "3c") write_kb_code $ASCII_3C;;
        "3d") write_kb_code $ASCII_3D;;
        "3e") write_kb_code $ASCII_3E;;
        "3f") eval write_kb_code \$$(get_defined_variables ASCII_3F ISO_8859_5_3F);;
        "40") write_kb_code $ASCII_40;;
        "5b") write_kb_code $ASCII_5B;;
        "5c") write_kb_code $ASCII_5C;;
        "5d") write_kb_code $ASCII_5D;;
        "5e") write_kb_code $ASCII_5E;;
        "5f") eval write_kb_code \$$(get_defined_variables ASCII_5F ISO_8859_5_5F);;
        "60") write_kb_code $ASCII_60;;
        "41") write_kb_code $ASCII_41;;
        "42") write_kb_code $ASCII_42;;
        "43") write_kb_code $ASCII_43;;
        "44") write_kb_code $ASCII_44;;
        "45") write_kb_code $ASCII_45;;
        "46") write_kb_code $ASCII_46;;
        "47") write_kb_code $ASCII_47;;
        "48") write_kb_code $ASCII_48;;
        "49") write_kb_code $ASCII_49;;
        "4a") write_kb_code $ASCII_4A;;
        "4b") write_kb_code $ASCII_4B;;
        "4c") write_kb_code $ASCII_4C;;
        "4d") write_kb_code $ASCII_4D;;
        "4e") write_kb_code $ASCII_4E;;
        "4f") write_kb_code $ASCII_4F;;
        "50") write_kb_code $ASCII_50;;
        "51") write_kb_code $ASCII_51;;
        "52") write_kb_code $ASCII_52;;
        "53") write_kb_code $ASCII_53;;
        "54") write_kb_code $ASCII_54;;
        "55") write_kb_code $ASCII_55;;
        "56") write_kb_code $ASCII_56;;
        "57") write_kb_code $ASCII_57;;
        "58") write_kb_code $ASCII_58;;
        "59") write_kb_code $ASCII_59;;
        "5a") write_kb_code $ASCII_5A;;
        "61") write_kb_code $ASCII_61;;
        "62") write_kb_code $ASCII_62;;
        "63") write_kb_code $ASCII_63;;
        "64") write_kb_code $ASCII_64;;
        "65") write_kb_code $ASCII_65;;
        "66") write_kb_code $ASCII_66;;
        "67") write_kb_code $ASCII_67;;
        "68") write_kb_code $ASCII_68;;
        "69") write_kb_code $ASCII_69;;
        "6a") write_kb_code $ASCII_6A;;
        "6b") write_kb_code $ASCII_6B;;
        "6c") write_kb_code $ASCII_6C;;
        "6d") write_kb_code $ASCII_6D;;
        "6e") write_kb_code $ASCII_6E;;
        "6f") write_kb_code $ASCII_6F;;
        "70") write_kb_code $ASCII_70;;
        "71") write_kb_code $ASCII_71;;
        "72") write_kb_code $ASCII_72;;
        "73") write_kb_code $ASCII_73;;
        "74") write_kb_code $ASCII_74;;
        "75") write_kb_code $ASCII_75;;
        "76") write_kb_code $ASCII_76;;
        "77") write_kb_code $ASCII_77;;
        "78") write_kb_code $ASCII_78;;
        "79") write_kb_code $ASCII_79;;
        "7a") write_kb_code $ASCII_7A;;
        "7b") write_kb_code $ASCII_7B;;
        "7c") write_kb_code $ASCII_7C;;
        "7d") write_kb_code $ASCII_7D;;
        "7e") eval write_kb_code \$$(get_defined_variables ASCII_7E ISO_8859_5_7E);;
        ## ISO_8859_1 chars
        "c2a0") write_kb_code $ISO_8859_1_A0;; # NBSP
        "c2a2") write_kb_code $ISO_8859_1_A2;; # ¢
        "c2a3") eval write_kb_code \$$(get_defined_variables ISO_8859_1_A3 ISO_8859_5_23);; # £
        "c2a4") eval write_kb_code \$$(get_defined_variables ISO_8859_1_A4 UNICODE_2D9);; # ¤
        "c2a6") write_kb_code $ISO_8859_1_A6;; # ¦
        "c2a7") eval write_kb_code \$$(get_defined_variables ISO_8859_1_A7 UNICODE_2DD);; # §
        "c2a8") write_kb_code $ISO_8859_1_A8;; # ¨
        "c2aa") write_kb_code $ISO_8859_1_AA;; # ª
        "c2ab") eval write_kb_code \$$(get_defined_variables ISO_8859_1_AB ISO_8859_5_26);; # «
        "c2ac") write_kb_code $ISO_8859_1_AC;; # ¬
        "c2ad") write_kb_code $ISO_8859_1_AD;; # soft hyphen
        "c2af") write_kb_code $ISO_8859_1_AF;; # ¯
        "c2b0") write_kb_code $ISO_8859_1_B0;; # °
        "c2b1") write_kb_code $ISO_8859_1_B1;; # ±
        "c2b2") write_kb_code $ISO_8859_1_B2;; # ²
        "c2b3") write_kb_code $ISO_8859_1_B3;; # ³
        "c2b4") write_kb_code $ISO_8859_1_B4;; # ´
        "c2b5") write_kb_code $ISO_8859_1_B5;; # µ
        "c2b6") write_kb_code $ISO_8859_1_B6;; # ¶
        "c2b8") write_kb_code $ISO_8859_1_B8;; # ¸
        "c2ba") write_kb_code $ISO_8859_1_BA;; # º
        "c2bb") eval write_kb_code \$$(get_defined_variables ISO_8859_1_BB ISO_8859_5_27);; # »
        "c2bc") write_kb_code $ISO_8859_1_BC;; # ¼
        "c2bd") write_kb_code $ISO_8859_1_BD;; # ½
        "c2be") write_kb_code $ISO_8859_1_BE;; # ¾
        "c384") write_kb_code $ISO_8859_1_C4;; # Ä
        "c385") write_kb_code $ISO_8859_1_C5;; # Å
        "c386") write_kb_code $ISO_8859_1_C6;; # Æ
        "c387") write_kb_code $ISO_8859_1_C7;; # Ç
        "c389") write_kb_code $ISO_8859_1_C9;; # É
        "c396") write_kb_code $ISO_8859_1_D6;; # Ö
        "c397") write_kb_code $ISO_8859_1_D7;; # ×
        "c398") write_kb_code $ISO_8859_1_D8;; # Ø
        "c39c") write_kb_code $ISO_8859_1_DC;; # Ü
        "c39f") eval write_kb_code \$$(get_defined_variables ISO_8859_1_DF UNICODE_2DB);; # ß
        "c3a0") write_kb_code $ISO_8859_1_E0;; # à
        "c3a4") write_kb_code $ISO_8859_1_E4;; # ä
        "c3a5") write_kb_code $ISO_8859_1_E5;; # å
        "c3a6") write_kb_code $ISO_8859_1_E6;; # æ
        "c3a7") write_kb_code $ISO_8859_1_E7;; # ç
        "c3a8") write_kb_code $ISO_8859_1_E8;; # è
        "c3a9") write_kb_code $ISO_8859_1_E9;; # é
        "c3ac") write_kb_code $ISO_8859_1_EC;; # ì
        "c3ad") write_kb_code $ISO_8859_1_ED;; # í
        "c3b0") write_kb_code $ISO_8859_1_F0;; # ð
        "c3b2") write_kb_code $ISO_8859_1_F2;; # ò
        "c3b3") write_kb_code $ISO_8859_1_F3;; # ó
        "c3b6") write_kb_code $ISO_8859_1_F6;; # ö
        "c3b7") write_kb_code $ISO_8859_1_F7;; # ÷
        "c3b8") write_kb_code $ISO_8859_1_F8;; # ø
        "c3b9") write_kb_code $ISO_8859_1_F9;; # ù
        "c3ba") write_kb_code $ISO_8859_1_FA;; # ú
        "c3bc") write_kb_code $ISO_8859_1_FC;; # ü
        "c3be") write_kb_code $ISO_8859_1_FE;; # þ
        ## UNICODE chars
        "c48d") write_kb_code $UNICODE_10D;; # č
        "c5a1") write_kb_code $UNICODE_161;; # š
        "c5be") write_kb_code $UNICODE_17E;; # ž
        "c487") write_kb_code $UNICODE_107;; # ć
        "c491") write_kb_code $UNICODE_111;; # đ
        "c48c") write_kb_code $UNICODE_10C;; # Č
        "c5a0") write_kb_code $UNICODE_160;; # Š
        "c5bd") write_kb_code $UNICODE_17D;; # Ž
        "c486") write_kb_code $UNICODE_106;; # Ć
        "c490") write_kb_code $UNICODE_110;; # Đ
        "c3b7") write_kb_code $UNICODE_142;; # ÷
        "c397") write_kb_code $UNICODE_141;; # ×
        "c582") write_kb_code $UNICODE_2C7;; # ł
        "c581") write_kb_code $UNICODE_2D8;; # Ł
        "e282ac") write_kb_code $UNICODE_20AC;; # €
        ## ISO_8859_5 chars, special for ru layout ####
        "d191") write_kb_code $ISO_8859_5_F1;;
        "d081") write_kb_code $ISO_8859_5_A1;;
        "e2809c") write_kb_code $ISO_8859_5_22;;
        "d18a") write_kb_code $ISO_8859_5_CA;;
        "d0aa") write_kb_code $ISO_8859_5_EA;;
        "d0af") write_kb_code $ISO_8859_5_CF;; # Я
        "d18f") write_kb_code $ISO_8859_5_EF;; # я
        "d0a8") write_kb_code $ISO_8859_5_C8;; # Ш
        "d188") write_kb_code $ISO_8859_5_E8;; # ш
        "d095") write_kb_code $ISO_8859_5_B5;; # Е
        "d0b5") write_kb_code $ISO_8859_5_D5;; # е
        "d0a0") write_kb_code $ISO_8859_5_C0;; # Р
        "d180") write_kb_code $ISO_8859_5_E0;; # р
        "d0a2") write_kb_code $ISO_8859_5_C2;; # Т
        "d182") write_kb_code $ISO_8859_5_E2;; # т
        "d0ab") write_kb_code $ISO_8859_5_CB;; # Ы
        "d18b") write_kb_code $ISO_8859_5_EB;; # ы
        "d0a3") write_kb_code $ISO_8859_5_C3;; # У
        "d183") write_kb_code $ISO_8859_5_E3;; # у
        "d098") write_kb_code $ISO_8859_5_B8;; # И
        "d0b8") write_kb_code $ISO_8859_5_D8;; # и
        "d09e") write_kb_code $ISO_8859_5_BE;; # О
        "d0be") write_kb_code $ISO_8859_5_DE;; # о
        "d09f") write_kb_code $ISO_8859_5_BF;; # П
        "d0bf") write_kb_code $ISO_8859_5_DF;; # п
        "d0ae") write_kb_code $ISO_8859_5_CE;; # Ю
        "d18e") write_kb_code $ISO_8859_5_EE;; # ю
        "d0a9") write_kb_code $ISO_8859_5_C9;; # Щ
        "d189") write_kb_code $ISO_8859_5_E9;; # щ
        "d090") write_kb_code $ISO_8859_5_B0;; # А
        "d0b0") write_kb_code $ISO_8859_5_D0;; # а
        "d0a1") write_kb_code $ISO_8859_5_C1;; # С
        "d181") write_kb_code $ISO_8859_5_E1;; # с
        "d094") write_kb_code $ISO_8859_5_B4;; # Д
        "d0b4") write_kb_code $ISO_8859_5_D4;; # д
        "d0a4") write_kb_code $ISO_8859_5_C0;; # Ф
        "d184") write_kb_code $ISO_8859_5_D0;; # ф
        "d093") write_kb_code $ISO_8859_5_B3;; # Г
        "d0b3") write_kb_code $ISO_8859_5_D3;; # г
        "d0a7") write_kb_code $ISO_8859_5_C3;; # Ч
        "d187") write_kb_code $ISO_8859_5_E3;; # ч
        "d099") write_kb_code $ISO_8859_5_B9;; # Й
        "d0b9") write_kb_code $ISO_8859_5_D9;; # й
        "d09a") write_kb_code $ISO_8859_5_BA;; # К
        "d0ba") write_kb_code $ISO_8859_5_DA;; # к
        "d09b") write_kb_code $ISO_8859_5_BB;; # Л
        "d0bb") write_kb_code $ISO_8859_5_DB;; # л
        "d0ac") write_kb_code $ISO_8859_5_CC;; # Ь
        "d18c") write_kb_code $ISO_8859_5_EC;; # ь
        "d096") write_kb_code $ISO_8859_5_B6;; # Ж
        "d0b6") write_kb_code $ISO_8859_5_D6;; # ж
        "e28496") write_kb_code $ISO_8859_5_F0;; # №
        "d097") write_kb_code $ISO_8859_5_B7;; # З
        "d0b7") write_kb_code $ISO_8859_5_D7;; # з
        "d0a5") write_kb_code $ISO_8859_5_C5;; # Х
        "d185") write_kb_code $ISO_8859_5_E5;; # х
        "d0a6") write_kb_code $ISO_8859_5_C6;; # Ц
        "d186") write_kb_code $ISO_8859_5_E6;; # ц
        "d092") write_kb_code $ISO_8859_5_B2;; # В
        "d0b2") write_kb_code $ISO_8859_5_D2;; # в
        "d091") write_kb_code $ISO_8859_5_B1;; # Б
        "d0b1") write_kb_code $ISO_8859_5_D1;; # б
        "d09d") write_kb_code $ISO_8859_5_BD;; # Н
        "d0bd") write_kb_code $ISO_8859_5_DD;; # н
        "d09c") write_kb_code $ISO_8859_5_BC;; # М
        "d0bc") write_kb_code $ISO_8859_5_DC;; # м
    esac
}

## Parse the COMBO KEY to the mapped KEY_BIN variables.
function translate_combo_key(){
    local OPT_KEY=$1
    case "$OPT_KEY" in
        "ctrl"|"control")                   echo "left-ctrl";;
        "shift")                            echo "left-shift";;
        "alt"|"alter")                      echo "left-alt";;
        "gui"|"windows"|"meta"|"command")   echo "left-meta";;
        "menu"|"app"|"application")         echo "left-shift f10";;
        "a")                                echo "$KEY_A_BIN";;
        "b")                                echo "$KEY_B_BIN";;
        "c")                                echo "$KEY_C_BIN";;
        "d")                                echo "$KEY_D_BIN";;
        "e")                                echo "$KEY_E_BIN";;
        "f")                                echo "$KEY_F_BIN";;
        "g")                                echo "$KEY_G_BIN";;
        "h")                                echo "$KEY_H_BIN";;
        "i")                                echo "$KEY_I_BIN";;
        "j")                                echo "$KEY_J_BIN";;
        "k")                                echo "$KEY_K_BIN";;
        "l")                                echo "$KEY_L_BIN";;
        "m")                                echo "$KEY_M_BIN";;
        "n")                                echo "$KEY_N_BIN";;
        "o")                                echo "$KEY_O_BIN";;
        "p")                                echo "$KEY_P_BIN";;
        "q")                                echo "$KEY_Q_BIN";;
        "r")                                echo "$KEY_R_BIN";;
        "s")                                echo "$KEY_S_BIN";;
        "t")                                echo "$KEY_T_BIN";;
        "u")                                echo "$KEY_U_BIN";;
        "v")                                echo "$KEY_V_BIN";;
        "w")                                echo "$KEY_W_BIN";;
        "x")                                echo "$KEY_X_BIN";;
        "y")                                echo "$KEY_Y_BIN";;
        "z")                                echo "$KEY_Z_BIN";;
        "0")                                echo "$KEY_0_BIN";;
        "1")                                echo "$KEY_1_BIN";;
        "2")                                echo "$KEY_2_BIN";;
        "3")                                echo "$KEY_3_BIN";;
        "4")                                echo "$KEY_4_BIN";;
        "5")                                echo "$KEY_5_BIN";;
        "6")                                echo "$KEY_6_BIN";;
        "7")                                echo "$KEY_7_BIN";;
        "8")                                echo "$KEY_8_BIN";;
        "9")                                echo "$KEY_9_BIN";;
        "\`"|"backquote"|"tilde")           echo "$KEY_TILDE_BIN";;
        "-"|"minus")                        echo "$KEY_MINUS_BIN";;
        "="|"equal"|"equals")               echo "$KEY_EQUAL_BIN";;
        "["|"lbracket")                     echo "$KEY_RIGHT_BRACE_BIN";;
        "]"|"rbracket")                     echo "$KEY_LEFT_BRACE_BIN";;
        ";"|"semicolon")                    echo "$KEY_SEMICOLON_BIN";;
        "'"|"quote")                        echo "$KEY_QUOTE_BIN";;
        "\\"|"backslash")                   echo "$KEY_BACKSLASH_BIN";;
        ","|"comma")                        echo "$KEY_COMMA_BIN";;
        "."|"period")                       echo "$KEY_PERIOD_BIN";;
        "/"|"slash")                        echo "$KEY_SLASH_BIN";;
        *)                                  echo "$OPT_KEY";;
    esac
}

## Parse the duckyscript line by line and look for the first word to see if it is a ducky command or just shell command.
function command_interpreter(){
    local TMP_CMD=$1
    local TMP_CONTENT=$2
    local TMP_HEX_CHAR

    if echo "$TMP_CMD" | $BUSYBOX grep -q -E "^[A-Z]+$"; then
        if [ "$TMP_CMD" = "STRING" ]; then
            #### Thanks to the tools 'fold' and 'xxd' from busybox that make things easier
            ## convert the whole string to a non-space hex string with '0a' between each unicode characters.
            TMP_CONTENT=$(echo "$TMP_CONTENT" | $BUSYBOX fold -w1 | $BUSYBOX xxd -p)
            ## split the string into array by the delimiter '0a'
            TMP_CONTENT=(${TMP_CONTENT//0a/ })
            ## loop each hex string and then pass it to convert_ducky function to do the match
            for TMP_HEX_CHAR in ${TMP_CONTENT[@]}; do
                convert_ducky $TMP_HEX_CHAR
            done
        elif [ "$TMP_CMD" = "DELAY" ]; then
            if ! echo "$TMP_CONTENT" | $BUSYBOX grep -q -E "^[0-9]*$"; then
                echo "Invalid DELAY format, should be an integer >= 0."
                exit 1
            fi
            echo "$BUSYBOX usleep ${TMP_CONTENT}000" >> $OUTFILE
        elif [ "$TMP_CMD" = "REM" ]; then
            echo "#### \"${TMP_CONTENT[@]}\" ####" >> $OUTFILE
        elif [ "$TMP_CMD" = "REPEAT" ]; then
            if ! echo "$TMP_CONTENT" | $BUSYBOX grep -q -E "^[0-9]*$"; then
                echo "Invalid DELAY format, should be like: [123]"
                exit 1
            fi
            read -r CMD CONTENT <<< $LAST_CMD
            echo "REPEAT: $CMD ${CONTENT[@]}"
            for i in $(seq 1 $TMP_CONTENT); do
                command_interpreter "$CMD" "${CONTENT[@]}"
            done
            LAST_CMD="$CMD ${CONTENT[@]}"
        elif [ "$TMP_CMD" = "COMBO" ]; then
            TMP_CONTENT=(${TMP_CONTENT[@]})
            local FULL_CMD
            FULL_CMD=()
            for i in "${TMP_CONTENT[@]}"; do
                ERROR_CODE=1
                local KEY="`tr '[:upper:]' '[:lower:]' <<< $i`"
                for j in "${COMBO_KEYS[@]}"; do
                    if [ "$j" = "$KEY" ]; then
                        ERROR_CODE=0
                        break
                    fi
                done
                [ $ERROR_CODE -eq 1 ] && echo "$i is not a valid key combination, please check." | tee $OUTFILE && exit 1
                FULL_CMD+=($(translate_combo_key $KEY))
            done
            write_kb_code_bin "${FULL_CMD[@]}"
        elif [ "$TMP_CMD" = "MOUSE" ]; then
            write_mouse_code ${TMP_CONTENT}
        else
            TMP_CONTENT=($TMP_CMD ${TMP_CONTENT[@]})
            local FULL_CMD
            FULL_CMD=()
            for i in "${TMP_CONTENT[@]}"; do
                ERROR_CODE=1
                if echo $i | $BUSYBOX grep -q -E "^[a-zA-Z]$"; then
                    FULL_CMD+=($i)
                else
                    local KEY="`tr '[:upper:]' '[:lower:]' <<< $i`"
                    for j in "${COMBO_KEYS[@]}"; do
                        if [ "$j" = "$KEY" ]; then
                            ERROR_CODE=0
                            break
                        fi
                    done
                    [ $ERROR_CODE -eq 1 ] && echo "$i is not a valid key combination, please check." | tee $OUTFILE && exit 1
                    FULL_CMD+=($(translate_combo_key $KEY))
                fi
            done
            write_kb_code_bin "${FULL_CMD[@]}"
        fi
    else
        echo "$TMP_CMD ${TMP_CONTENT[@]}" >> $OUTFILE
    fi
}


###################
#### MAIN PART ####
###################

## Parse the args first.
while getopts "i:o:l:" OPTS; do
    case $OPTS in
        i) INFILE=$OPTARG;;
        o) OUTFILE=$OPTARG;;
        l) KB_LAYOUT=$OPTARG;;
        *) print_usage; exit 1;;
    esac
done

## check if all args are valid.
ERROR_CODE=0
if [ -z "$INFILE" ] || [ -z "$OUTFILE" ] || [ -z "$KB_LAYOUT" ]; then
    print_usage
    exit 1
fi
if [ "$INFILE" = "$OUTFILE" ]; then
    echo "[-] The input file and output file cannot be the same."
    ERROR_CODE=1
fi
if [ ! -f $INFILE ]; then
    echo "[-] Ducky input file $INFILE not existed, please check."
    ERROR_CODE=1
fi
if ! touch $OUTFILE; then
    echo "[-] Failed to create ducky output file to $OUTFILE, please check."
    ERROR_CODE=1
    rm -f $OUTFILE
fi

case "$KB_LAYOUT" in
    "us"|"tr"|"sv"|"si"|"ru"|"pt"|"no"|"it"|"hr"|"gb"|"fr"|"fi"|"es"|"dk"|"de"|"ca"|"br"|"be"|"hu")
    ;;
*)
    echo "[-] $KB_LAYOUT is not a supported keyboard layout"
    ERROR_CODE=1
    ;;
esac

if [ $ERROR_CODE -eq 1 ]; then
    exit 1
fi

unset ERROR_CODE

## Create $OUTFILE and add initial check script first.
cat << EOF > $OUTFILE
#!/system/bin/sh

## The script is converted by "$KB_LAYOUT" keyboard layout ##
echo "[!] Executing duckyscript.."
echo "[!] Checking if HID driver has been installed on target machine.."
COUNT=0
until echo volume-up | $HID_BIN /dev/hidg0 keyboard > /dev/null 2>&1; do
    sleep 1
    COUNT=\$((COUNT+1))
    if [ \$COUNT -eq 60 ]; then  #60 seconds
        echo "[-] HID driver still cannot be installed on target machine after \$COUNT second....\nScript aborted."
        exit 1
    fi
done
echo "[+] HID driver is found installed on target machine already! Executing attack..."

EOF

## The $LAST_CMD global variable will keep logging the last ducky command every time in the following while loop.
LAST_CMD=""

## Define the default keyboard layout variables first.
define_default_keys_value
## Convert the keyboard layout to 8 bytes value
convert_kb_layout
## Define the converted keyboard bin value
define_default_keys_bin

## Now parse the input file ducky.in line by line and convert them to shell script.
while IFS= read -r line || [ -n "$line" ]; do
    read -r CMD CONTENT <<< $line
    command_interpreter "$CMD" "$CONTENT"
    LAST_CMD="$CMD $CONTENT"
done < $INFILE

## Add the suffix script to $OUTFILE
echo "echo \"[+] Attack complete.\"" >> $OUTFILE
echo "\n\n" >> $OUTFILE