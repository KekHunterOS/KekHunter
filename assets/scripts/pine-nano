#!/system/bin/sh
#
# @Usage
# ./pine-nano start 172.16.42.245 172.16.42.0/24 172.16.42.1 1471
# ./pine-nano stop
# $1 = start/stop
# $2 = PINEAPPLE_CLIENT_IP
# $3 = PINEAPPLE_CIDR
# $4 = PINEAPPLE_GATEWAY
# $5 = PINEAPPLE_PORT
# $6 = start/stop port 80/443 redirection for transparent NAT

GATEWAY=$(getprop dhcp.wlan0.gateway)
PINEAPPLE_CLIENT_IP=$2  # 172.16.42.42/24
PINEAPPLE_CIDR=$3       # 172.16.42.0/24
PINEAPPLE_GATEWAY=$4    # 172.16.42.1
PINEAPPLE_PORT=$5       # 1471

UPSTREAM=wlan0
#ROUTING_TBL=33000

f_start(){

echo '1' > /proc/sys/net/ipv4/ip_forward

# Flush previous settings
ip addr flush dev eth0

# Add client IP and call eth0 up
ip addr add $PINEAPPLE_CLIENT_IP dev eth0
ip link set eth0 up

# Add default gateway
#ip route add default via $PINEAPPLE_GATEWAY dev eth0
ip route add default via $GATEWAY dev wlan0

# Find upstream routing table (usually wlan0)
for table in $(ip rule list | awk -F"lookup" '{print $2}');
do
DEF=`ip route show table $table|grep default|grep wlan0`
if ! [ -z "$DEF" ]; then
   break
fi
done
echo "This is the table: $table"

# Adding CIDR to upstream table
ip route add $PINEAPPLE_CIDR dev eth0 scope link table $table

# Flush IP Tables
iptables -F
iptables -F -t nat
iptables -F bw_INPUT
iptables -F bw_OUTPUT

# IP Tables NAT
iptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE
iptables -A FORWARD -i eth0 -o wlan0 -j ACCEPT

# START WEB INTERFACE
sleep 10
am start -a android.intent.action.VIEW -d http://$PINEAPPLE_GATEWAY:$PINEAPPLE_PORT
}

f_start_noup(){
# Flush previous settings
ip addr flush dev eth0

# Flush IP Tables
iptables -F
iptables -F -t nat
iptables -F bw_INPUT
iptables -F bw_OUTPUT

# Add client IP and call eth0 up
ip addr add $PINEAPPLE_CLIENT_IP dev eth0
ip link set eth0 up

# Add default gateway
#ip route add default via $PINEAPPLE_GATEWAY dev eth0
ip route add default via $GATEWAY dev wlan0

# Find upstream routing table (usually wlan0)
for table in $(ip rule list | awk -F"lookup" '{print $2}');
do
DEF=`ip route show table $table|grep default|grep wlan0`
if ! [ -z "$DEF" ]; then
   break
fi
done
echo "This is the table: $table"

# Adding CIDR to upstream table
ip route add $PINEAPPLE_CIDR dev eth0 scope link table $table

# START WEB INTERFACE
sleep 10
am start -a android.intent.action.VIEW -d http://$PINEAPPLE_GATEWAY:$PINEAPPLE_PORT
}

f_stop(){
# Bring down ethernet
ip addr flush dev eth0
ip link set eth0 down

# Delete previous route
ip route delete default via $PINEAPPLE_GATEWAY dev eth0

# Flush IP Tables
iptables -F
iptables -F -t nat
iptables -F bw_INPUT
iptables -F bw_OUTPUT

}

f_transproxy(){
    # For Bettercap/mitmproxy which acts as a transparent proxy
    iptables -t nat -A PREROUTING -i eth0 -p tcp --destination-port 80 -j REDIRECT --to-port 8080
    iptables -t nat -A PREROUTING -i eth0 -p tcp --destination-port 443 -j REDIRECT --to-port 8083
}

if [[ $1 == "start" ]];then
    f_start
fi

if [[ $1 == "start_noup" ]];then
    f_start_noup
fi

if [[ $1 == "stop" ]]; then
    f_stop
fi

if [[ $6 == "start_proxy" ]];then
    f_transproxy
fi