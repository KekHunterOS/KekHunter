#!/system/bin/sh

######### IMPORT BOOTKALI ENVIRONMENT #########
SCRIPT_PATH=$(readlink -f $0)
. ${SCRIPT_PATH%/*}/bootkali_init

# EXECUTE CHROOT / ADD ARGUMENTS TO LAUNCH SPECIFIC PROGRAMS
#
# ---------------  START / STOP ARGUMENTS  ----------------- #
# apache, beef-xss, dhcp, dnsmasq, hid-cmd, openvpn, ssh,
# mana {stop}, mana-full, mana-noup, mana-noupeap, mana-simple,
# mana-bdf, msf, fruitywifi
# ---------------  SINGLE ARGUMENT ------------------------- #
# hid-cmd, hid-cmd-elevated-win[7-8], wifite, iptables, update
# start-rev-met, start-rev-met-elevated-win[8-7]

if [ $# -eq 0 ]; then
    ######### Custom initial scripts can be run here after mounting the chroot #########
    [ ! -f $MNT/root/.hushlogin ] && touch "$MNT/root/.hushlogin"
    [ ! -d $MNT/root/.ssh ] && mkdir -p "$MNT/root/.ssh"
    clear
	$BUSYBOX chroot $MNT $CHROOT_EXEC -E PATH=$PATH su
else
	#APACHE

	if [ "$1" == "apache" ] && [ "$2" == "start" ]; then
		$BUSYBOX chroot $MNT sudo service apache2 start
	fi
	if [ "$1" == "apache" ] && [ "$2" == "stop" ]; then
		$BUSYBOX chroot $MNT sudo service apache2 stop
	fi

	#BEEF-XSS

	if [ "$1" == "beef-xss" ] && [ "$2" == "start" ]; then
		LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8 LC_ALL=en_US.UTF-8 $BUSYBOX chroot $MNT sudo service beef-xss start
		sleep 35
		am start -a android.intent.action.VIEW -d http://127.0.0.1:3000/ui/panel
	fi
	if [ "$1" == "beef-xss" ] && [ "$2" == "stop" ]; then
		$BUSYBOX chroot $MNT sudo service beef-xss stop
	fi

	#DHCP

	if [ "$1" == "dhcp" ] && [ "$2" == "start" ]; then
		$BUSYBOX chroot $MNT sudo service isc-dhcp-server start
	fi
	if [ "$1" == "dhcp" ] && [ "$2" == "stop" ]; then
		$BUSYBOX chroot $MNT sudo service isc-dhcp-server stop
	fi

	#DNSMASQ

	if [ "$1" == "dnsmasq" ] && [ "$2" == "start" ]; then
		$BUSYBOX chroot $MNT service dnsmasq start
	fi
	if [ "$1" == "dnsmasq" ] && [ "$2" == "stop" ]; then
		$BUSYBOX chroot $MNT service dnsmasq stop
	fi

	#HOSTAPD

	if [ "$1" == "hostapd" ] && [ "$2" == "start" ]; then
		#$BUSYBOX chroot $MNT /usr/sbin/hostapd /etc/hostapd/hostapd.conf >/dev/null 2>&1 </dev/null &
		$BUSYBOX chroot $MNT service hostapd start
	fi
	if [ "$1" == "hostapd" ] && [ "$2" == "stop" ]; then
		#killall hostapd 2> /dev/null
		$BUSYBOX chroot $MNT service hostapd stop
	fi

	#IPTABLES

	if [ "$1" == "iptables" ]; then
		$BUSYBOX chroot $MNT sh /sdcard/nh_files/configs/iptables.conf
	fi

	#MANA (is now using only the stop scripts)

	if [ "$1" == "mana-lollipop" ] && [ "$2" == "stop" ]; then
		$BUSYBOX chroot $MNT /usr/bin/stop-mana-lollipop
	fi
	if [ "$1" == "mana-kitkat" ] && [ "$2" == "stop" ]; then
		$BUSYBOX chroot $MNT /usr/bin/stop-mana-kitkat
	fi

	#MSF

	if [ "$1" == "msf" ] && [ "$2" == "start" ]; then
		$BUSYBOX chroot $MNT start-msf.sh
	fi
	if [ "$1" == "msf" ] && [ "$2" == "stop" ]; then
		$BUSYBOX chroot $MNT stop-msf.sh
	fi

	#OPENVPN

	if [ "$1" == "openvpn" ] && [ "$2" == "start" ]; then
		$BUSYBOX chroot $MNT service openvpn start
	fi
	if [ "$1" == "openvpn" ] && [ "$2" == "stop" ]; then
		$BUSYBOX chroot $MNT service openvpn stop
	fi

	# HID Keyboard Command a.k.a Teensy style
	# Supported keyboard layouts: US, FR, EN, ES
	# We can pass language options to bootkali like:
	# bootkali start-rev-met --us | --fr | --de | --es

	if [ "$1" == "start-rev-met" ]; then
		$BUSYBOX chroot $MNT sudo /usr/bin/hid-all.sh start-rev-met "$2" | /system/bin/sh
	fi
	if [ "$1" == "start-rev-met-elevated-win7" ]; then
		$BUSYBOX chroot $MNT sudo /usr/bin/hid-all.sh start-rev-met-elevated-win7 $2 | /system/bin/sh
	fi
	if [ "$1" == "start-rev-met-elevated-win8" ]; then
		$BUSYBOX chroot $MNT sudo /usr/bin/hid-all.sh start-rev-met-elevated-win8 $2 | /system/bin/sh
	fi
	if [ "$1" == "start-rev-met-elevated-win10" ]; then
		$BUSYBOX chroot $MNT sudo /usr/bin/hid-all.sh start-rev-met-elevated-win10 $2 | /system/bin/sh
	fi
	if [ "$1" == "hid-cmd-elevated-win10" ]; then
		$BUSYBOX chroot $MNT sudo /usr/bin/hid-all.sh hid-cmd-elevated-win10 "$2" | /system/bin/sh
	fi
	if [ "$1" == "hid-cmd-elevated-win8" ]; then
		$BUSYBOX chroot $MNT sudo /usr/bin/hid-all.sh hid-cmd-elevated-win8 "$2" | /system/bin/sh
	fi
	if [ "$1" == "hid-cmd-elevated-win7" ]; then
		$BUSYBOX chroot $MNT sudo /usr/bin/hid-all.sh hid-cmd-elevated-win7 "$2" | /system/bin/sh
	fi
	if [ "$1" == "hid-cmd" ]; then
		$BUSYBOX chroot $MNT sudo /usr/bin/hid-all.sh hid-cmd "$2" | /system/bin/sh
	fi

	# DUCK HUNT - Rubber Ducky conversion script to nethunter
	# Requires argument to generate based on language. e.g.:
	# bootkali duck-hunt-convert us /sdcard/nh_files/modules/ducktest.txt /opt/duckout.sh
	# Languages supported: us, fr, de, es,sv, it, uk, ru, dk, no, pt, be
	#
	# Run converted script with:
	# bootkali duck-hunt-run {/opt/duckout.sh}

	if [ "$1" == "duck-hunt-convert" ]; then
		$BUSYBOX chroot $MNT sudo python3 /sdcard/nh_files/modules/duckhunter.py -l $2 $3 $4
		$BUSYBOX chroot $MNT sudo chmod 755 $4
	fi
	if [ "$1" == "duck-hunt-run" ]; then
		if [ ! -f /data/local/nhsystem/kali-armhf$2 ] || [ ! -f /data/local/nhsystem/kalifs$2 ]; then
			echo "File not found"
		else
			echo "File /data/local/nhsystem/kalifs$2 found"
			$BUSYBOX chroot $MNT /bin/bash $2
		fi
	fi

	# File2HID will convert any file or string to HID for keyboard goodness
	# bootkali file2hid-file -f fileinput.txt -l us
	# bootkali file2hid-string -s "string" -l us

	if [ "$1" == "file2hid-file" ]; then
		$BUSYBOX chroot $MNT sudo python3 /sdcard/nh_files/modules/filetohid.py -f $2 -l us
	fi
	if [ "$1" == "file2hid-string" ]; then
		$BUSYBOX chroot $MNT sudo python3 /sdcard/nh_files/modules/filetohid.py -s $2 -l us
	fi

	#SSH

	if [ "$1" == "ssh" ] && [ "$2" == "start" ]; then
		$BUSYBOX chroot $MNT sudo service ssh start
	fi
	if [ "$1" == "ssh" ] && [ "$2" == "stop" ]; then
		$BUSYBOX chroot $MNT sudo service ssh stop
	fi

	#Disable WLAN1

	if [ "$1" == "wifi-disable" ]; then
		LANG=C PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin $BUSYBOX chroot $MNT sudo /usr/bin/stop-wlan1.sh
	fi

	#WIFITE

	if [ "$1" == "wifite" ]; then
		$BUSYBOX chroot $MNT sudo /bin/bash -c "chmod 777 /dev/null"
		ifconfig wlan1 up
		sleep 3
		LANG=C PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin $BUSYBOX chroot $MNT sudo /usr/bin/python3 /usr/bin/wifite
	fi

	#FRUITYWIFI

	if [ "$1" == "fruitywifi" ] && [ "$2" == "start" ]; then
		$BUSYBOX chroot $MNT /etc/init.d/php7-fpm start
		$BUSYBOX chroot $MNT /etc/init.d/fruitywifi start
		$BUSYBOX chroot $MNT /etc/init.d/nginx start
		sleep 15
        am start -a android.intent.action.VIEW -d http://127.0.0.1:8000
	fi
	if [ "$1" == "fruitywifi" ] && [ "$2" == "stop" ]; then
		$BUSYBOX chroot $MNT /etc/init.d/fruitywifi stop
		$BUSYBOX chroot $MNT /etc/init.d/php7-fpm stop
		$BUSYBOX chroot $MNT /etc/init.d/nginx stop
	fi

	#MACCHANGER
	# Usage:	bootkali macchanger <mac address> <interface>
	#		bootkali macchanger random <interface>

	if [ "$1" == "macchanger_random" ]; then
		$BUSYBOX chroot $MNT sudo /usr/bin/macchanger --random $2
	fi
	if [ "$1" == "macchanger_custom" ]; then
		$BUSYBOX chroot $MNT sudo /usr/bin/macchanger --mac=$2 $3
	fi
	if [ "$1" == "macchanger_original" ]; then
		$BUSYBOX chroot $MNT sudo /usr/bin/macchanger --permanent $2
	fi

	#GPSD
	# Usage:	bootkali start_gpsd <listen port>

	if [ "$1" == "start_gpsd" ]; then
		$BUSYBOX chroot $MNT sudo /usr/sbin/gpsd -n tcp://127.0.0.1:$2
	fi


	#KALIMENU

	if [ "$1" == "kalimenu" ]; then
		$BUSYBOX chroot $MNT sudo /usr/bin/kalimenu
	fi

	#YCABLE ¯\_(ಠ_ಠ)_/¯

	if [ "$1" == "ycable" ] && [ "$2" == "start" ]; then
		if [ -f "/sys/module/msm_otg/parameters/usbhost_charge_mode" ]; then
			echo "1" > /sys/module/msm_otg/parameters/usbhost_charge_mode
		fi
		if [ -f "/sys/module/tegra_otg/parameters/tegra_otg_on_charging" ]; then
			echo "Y" > /sys/module/tegra_otg/parameters/tegra_otg_on_charging
		fi
		if [ -f "/sys/module/dwc3/parameters/aca_enable" ]; then
			echo "Y" > /sys/module/dwc3/parameters/aca_enable
		fi
		if [ -f "/sys/module/dwc3/parameters/otg_charging" ]; then
			echo "Y" > /sys/module/dwc3/parameters/otg_charging
		fi
	fi

	if [ "$1" == "ycable" ] && [ "$2" == "stop" ]; then
		if [ -f "/sys/module/msm_otg/parameters/usbhost_charge_mode" ]; then
			echo "0" > /sys/module/msm_otg/parameters/usbhost_charge_mode
		fi
		if [ -f "/sys/module/tegra_otg/parameters/tegra_otg_on_charging" ]; then
			echo "N" > /sys/module/tegra_otg/parameters/tegra_otg_on_charging
		fi
		if [ -f "/sys/module/dwc3/parameters/aca_enable" ]; then
			echo "N" > /sys/module/dwc3/parameters/aca_enable
		fi
		if [ -f "/sys/module/dwc3/parameters/otg_charging" ]; then
			echo "N" > /sys/module/dwc3/parameters/otg_charging
		fi
	fi

	#CUSTOM BUTTONS

	if [ "$1" == "custom_cmd" ]; then
		commmand=""
		LANG=C PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
		while test $# -gt 0
		do
			shift
			commmand=${commmand}" "$1
		done
		$BUSYBOX chroot $MNT sudo $commmand
	fi

	#MFOC MIFARE DUMP

	if [ "$1" == "dumpmifare" ]; then
		$BUSYBOX chroot $MNT /usr/bin/dumpmifare.sh
	fi

	#APT-GET
	#Example: bootkali apt-get install "package-name package2"
	#Packages don't have to be in quotes but it doesn't hurt
	#Also, you can leave the packages blank and it'll just update/upgrade

	if [ "$1" == "apt-get" ] && [ "$2" == "install" ]; then
		echo -e "\e[32mHere we go!\n\nInstalling any new metapackages and update/upgrading.\n\nNote that you may be asked to interact during the installation of some packages.\n\n"
		echo -e "kali-chroot$ /usr/bin/apt-get update\e[0m"
		LANG=C PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin $BUSYBOX chroot $MNT /usr/bin/apt-get update
		if [ -z ${var+x} ] || [ "$3" != "" ]; then
			echo -e "\e[32mkali-chroot$ /usr/bin/apt-get -y install "$3"\e[0m"
			LANG=C DEBIAN_FRONTEND=noninteractive PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin $BUSYBOX chroot $MNT /usr/bin/apt-get -y install "$3"
		fi
		echo -e "\e[32mkali-chroot$ /usr/bin/apt-get -y dist-upgrade\e[0m"
		LANG=C DEBIAN_FRONTEND=noninteractive PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin $BUSYBOX chroot $MNT /usr/bin/apt-get -y dist-upgrade
		LANG=C DEBIAN_FRONTEND=noninteractive PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin $BUSYBOX chroot $MNT /usr/bin/apt-get -y install "$3"
		echo -e "\e[32mkali-chroot$ /usr/bin/apt-get -y dist-upgrade\e[0m"
		LANG=C DEBIAN_FRONTEND=noninteractive PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin $BUSYBOX chroot $MNT /usr/bin/apt-get -y dist-upgrade
		echo -e "\e[32m"
		printf "\n\nDone!\n\nPress the 'back' key to return to Nethunter.\n\nIf you noticed errors, press the up-arrow key (if your keyboard supports it) to review previously-issued commands.\n"
		printf "And remember to use the 'Maintain Chroot' button in the Chroot Manager to keep your chroot up-to-date and to install new metapackages.\n\n"
		echo -e "\e[0m"
	fi
fi
